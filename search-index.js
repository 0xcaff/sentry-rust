var N=null,E="",T="t",U="u",searchIndex={};
var R=["value","result","error","Number","Represents a JSON number, whether integer or floating point.","sentry::protocol","Values","filename","The filename (basename only).","abs_path","If known the absolute path.","The line number if known.","The column number if known.","pre_context","The sources of the lines leading up to the current line.","context_line","The current line as source.","post_context","The sources of the lines after the current line.","POSIX signal with optional extended data.","Optional name of the errno constant.","Represents a single exception.","stacktrace","raw_stacktrace","image_addr","The name of the debug image (usually filename)","The optional CPU architecture of the debug image.","The starting address of the image.","image_size","The size of the image in bytes.","image_vmaddr","The address where the image is loaded at runtime.","Additional arbitrary fields for forwards compatibility.","version","message","timestamp","exception","Breadcrumb","Represents a single breadcrumb.","The timestamp of the breadcrumb.  This is required.","The type of the breadcrumb.","category","The optional category of the breadcrumb.","The non optional level of the breadcrumb. It defaults to…","An optional human readbale message for the breadcrumb.","Arbitrary breadcrumb data that should be send along.","Represents the level of severity of an event or breadcrumb.","Indicates very spammy debug information.","Informational messages.","A warning.","An error.","Similar to error but indicates a critical event that…","Represents user info.","The ID of the user.","The email address of the user.","ip_address","The remote ip address of the user.","username","A human readable username of the user.","environment","server_name","last_event_id","capture_event","capture_message","Captures an arbitrary message.","client","option","with_scope","Temporarily pushes a scope for a single call optionally…","configure_scope","Invokes a function that can modify the current scope.","add_breadcrumb","intobreadcrumbs","integrations","backtrace","capture_error","Captures a boxed failure (`failure::Error`).","capture_fail","Captures a `failure::Fail`.","sentry::integrations","loggeroptions","panicinfo","clientoptions","duration","string","context","debugimage","Unique identifier for debug information files and their…","ParseDebugIdError","Indicates a parsing error","Makes a new `Date` from year, month, day and the current…","Makes a new `Date` from year, day of year (DOY or…","localresult","Makes a new `Date` from ISO week date (year and week…","Makes a new `DateTime` from the number of non-leap seconds…","datetime","Makes a new `DateTime` from the number of non-leap…","parseerror","naivedate","naivedatetime","dsnparseerror","transport","sentry::protocol::value","clone_into","try_from","try_into","borrow_mut","to_string","to_owned","sentry::protocol::map","into_iter","type_id","sentry::protocol::debugid","sentry::internals","equivalent","sentry::integrations::log","sentry::transports","size_hint","btreemap","ordering","formatter","next_back","deserialize","index_mut","serialize","deserialize_any","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_u128","deserialize_option","deserialize_enum","deserialize_newtype_struct","deserialize_bool","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_unit","deserialize_unit_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","from_iter","partial_cmp","from_str","projectid","threadid","posixsignal","ipaddress","machexception","clientsdkinfo","systemsdkinfo","debugmeta","symbolicdebugimage","oscontext","mechanism","projectidparseerror","devicecontext","proguarddebugimage","orientation","clientsdkpackage","breadcrumb","browsercontext","mechanismmeta","appledebugimage","runtimecontext","appcontext","logentry","templateinfo","default","request","parseinterror","authparseerror","addrparseerror","fixedoffset","Convert this `DateTime<FixedOffset>` instance into a…","systemtime","Convert this `DateTime<Local>` instance into a…","Convert this `DateTime<Utc>` instance into a…","description","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","debugid","parsedebugiderror","into_breadcrumbs","send_event","create_transport","scopeguard","Clears the map, removing all values.","Returns a reference to the value corresponding to the key.","contains_key","Returns a mutable reference to the value corresponding to…","Inserts a key-value pair into the map.","Removes a key from the map, returning the value at the key…","Gets the given key's corresponding entry in the map for…","values_mut","valuesmut","Returns the number of elements in the map.","Ensures a value is in the entry by inserting the default…","is_empty","type_name","is_enabled","shutdown","Drains the queue if there is one.","timestamp_millis","timestamp_nanos","Parses a string with the specified format string and…","Formats the combined date and time with the specified…","delayedformat","strftimeitems","public_key","secret_key","byteserror","Creates a `Uuid` using the supplied big-endian bytes.","TemplateInfo","Stacktrace","MachException","PosixSignal","MechanismMeta","Mechanism","Exception","IpAddress","SystemSdkInfo","DebugImage","AppleDebugImage","SymbolicDebugImage","ProguardDebugImage","DebugMeta","ClientSdkInfo","ClientSdkPackage","Orientation","DeviceContext","OsContext","RuntimeContext","AppContext","BrowserContext","ClientOptions","FailureHubExt","FailureResultExt","LoggerOptions","DsnParseError","ProjectIdParseError","UuidVariant","UuidVersion","IntoBreadcrumbs","Transport","TransportFactory","OccupiedEntry","VacantEntry","ValuesMut","BreakpadFormat","ParseLevelError","ScopeGuard","ClientInitGuard","DefaultTransportFactory","ReqwestHttpTransport","ChronoParseError","ProjectId"];
searchIndex["sentry"]={"doc":E,"i":[[0,"protocol","sentry","The current latest sentry protocol version.",N,N],[0,R[0],R[5],"An arbitrary (JSON) value.",N,N],[5,"to_value",R[102],"Convert a `T` into `serde_json::Value` which is an enum…",N,[[[T]],[[R[1],[R[0],R[2]]],[R[2]],[R[0]]]]],[8,"Index",E,"A type that can be used to index into a `serde_json::Value`.",N,N],[4,"Value",E,"Represents any valid JSON value.",N,N],[13,"Null",E,"Represents a JSON null value.",0,N],[13,"Bool",E,"Represents a JSON boolean.",0,N],[13,R[3],E,R[4],0,N],[13,"String",E,"Represents a JSON string.",0,N],[13,"Array",E,"Represents a JSON array.",0,N],[13,"Object",E,"Represents a JSON object.",0,N],[3,"Map",E,"Represents a JSON key/value type.",N,N],[5,"from_value",E,"Interpret a `serde_json::Value` as an instance of type `T`.",N,[[[R[0]]],[[R[1],[R[2]]],[R[2]]]]],[3,R[3],E,R[4],N,N],[0,"map",R[5],"The internally used arbitrary data map type.",N,N],[3,"RangeMut",R[109],"A mutable iterator over a sub-range of entries in a…",N,N],[3,R[264],E,"A view into an occupied entry in a `BTreeMap`. It is part…",N,N],[3,"Map",E,"A map based on a B-Tree.",N,N],[3,R[265],E,"A view into a vacant entry in a `BTreeMap`. It is part of…",N,N],[3,R[6],E,"An iterator over the values of a `BTreeMap`.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant entry.",1,N],[13,"Occupied",E,"An occupied entry.",1,N],[3,"Range",E,"An iterator over a sub-range of entries in a `BTreeMap`.",N,N],[3,"IntoIter",E,"An owning iterator over the entries of a `BTreeMap`.",N,N],[3,"Keys",E,"An iterator over the keys of a `BTreeMap`.",N,N],[3,"IterMut",E,"A mutable iterator over the entries of a `BTreeMap`.",N,N],[3,R[266],E,"A mutable iterator over the values of a `BTreeMap`.",N,N],[3,"Iter",E,"An iterator over the entries of a `BTreeMap`.",N,N],[0,R[199],R[5],"Represents a debug ID.",N,N],[3,R[267],R[112],"Wrapper around `DebugId` for Breakpad formatting.",N,N],[3,"DebugId",E,R[87],N,N],[3,R[88],E,R[89],N,N],[3,R[6],R[5],"A wrapper type for collections with attached meta data.",N,N],[12,"values",E,"The values of the collection.",2,N],[3,"LogEntry",E,"Represents a log entry message.",N,N],[12,R[34],E,"The log message with parameters replaced by `%s`",3,N],[12,"params",E,"Positional parameters to be inserted into the log entry.",3,N],[3,"Frame",E,"Represents a frame.",N,N],[12,"function",E,"The name of the function is known.",4,N],[12,"symbol",E,"The potentially mangled name of the symbol as it appears…",4,N],[12,"module",E,"The name of the module the frame is contained in.",4,N],[12,"package",E,"The name of the package that contains the frame.",4,N],[12,R[7],E,R[8],4,N],[12,R[9],E,R[10],4,N],[12,"lineno",E,R[11],4,N],[12,"colno",E,R[12],4,N],[12,R[13],E,R[14],4,N],[12,R[15],E,R[16],4,N],[12,R[17],E,R[18],4,N],[12,"in_app",E,"In-app indicator.",4,N],[12,"vars",E,"Optional local variables.",4,N],[12,R[24],E,"If known the location of the image.",4,N],[12,"instruction_addr",E,"If known the location of the instruction.",4,N],[12,"symbol_addr",E,"If known the location of symbol.",4,N],[3,R[231],E,"Represents template debug info.",N,N],[12,R[7],E,R[8],5,N],[12,R[9],E,R[10],5,N],[12,"lineno",E,R[11],5,N],[12,"colno",E,R[12],5,N],[12,R[13],E,R[14],5,N],[12,R[15],E,R[16],5,N],[12,R[17],E,R[18],5,N],[3,R[232],E,"Represents a stacktrace.",N,N],[12,"frames",E,"The list of frames in the stacktrace.",6,N],[12,"frames_omitted",E,"Optionally a segment of frames removed (`start`, `end`).",6,N],[12,"registers",E,"Optional register values of the thread.",6,N],[4,"ThreadId",E,"Represents a thread id.",N,N],[13,"Int",E,"Integer representation for the thread id",7,N],[13,"String",E,"String representation for the thread id",7,N],[3,"Addr",E,"Represents an address.",N,N],[12,"0",E,E,8,N],[3,"RegVal",E,"Represents a register value.",N,N],[12,"0",E,E,9,N],[3,"Thread",E,"Represents a single thread.",N,N],[12,"id",E,"The optional ID of the thread (usually an integer)",10,N],[12,"name",E,"The optional name of the thread.",10,N],[12,R[22],E,"If the thread suspended or crashed a stacktrace can be…",10,N],[12,R[23],E,"Optional raw stacktrace.",10,N],[12,"crashed",E,"True if this is the crashed thread.",10,N],[12,"current",E,"Indicates that the thread was not suspended when the event…",10,N],[3,"CError",E,R[19],N,N],[12,"number",E,"The error code as specified by ISO C99, POSIX.1-2001 or…",11,N],[12,"name",E,R[20],11,N],[3,R[233],E,"Mach exception information.",N,N],[12,R[36],E,"The mach exception type.",12,N],[12,"code",E,"The mach exception code.",12,N],[12,"subcode",E,"The mach exception subcode.",12,N],[12,"name",E,"Optional name of the mach exception.",12,N],[3,R[234],E,R[19],N,N],[12,"number",E,"The POSIX signal number.",13,N],[12,"code",E,"An optional signal code present on Apple systems.",13,N],[12,"name",E,R[20],13,N],[12,"code_name",E,R[20],13,N],[3,R[235],E,"Operating system or runtime meta information to an…",N,N],[12,"errno",E,"Optional ISO C standard error code.",14,N],[12,"signal",E,"Optional POSIX signal number.",14,N],[12,"mach_exception",E,"Optional mach exception information.",14,N],[3,R[236],E,R[21],N,N],[12,"ty",E,"The mechanism type identifier.",15,N],[12,R[193],E,"Human readable detail description.",15,N],[12,"help_link",E,"An optional link to online resources describing this error.",15,N],[12,"handled",E,"An optional flag indicating whether this exception was…",15,N],[12,"synthetic",E,"An optional flag indicating a synthetic exception.",15,N],[12,"data",E,"Additional attributes depending on the mechanism type.",15,N],[12,"meta",E,"Operating system or runtime meta information.",15,N],[3,R[237],E,R[21],N,N],[12,"ty",E,"The type of the exception.",16,N],[12,R[0],E,"The optional value of the exception.",16,N],[12,"module",E,"An optional module for this exception.",16,N],[12,R[22],E,"Optionally the stacktrace.",16,N],[12,R[23],E,"An optional raw stacktrace.",16,N],[12,"thread_id",E,"Optional identifier referring to a thread.",16,N],[12,R[169],E,"The mechanism of the exception including OS specific…",16,N],[3,R[268],E,"An error used when parsing `Level`.",N,N],[4,"Level",E,R[46],N,N],[13,"Debug",E,R[47],17,N],[13,"Info",E,R[48],17,N],[13,"Warning",E,R[49],17,N],[13,"Error",E,R[50],17,N],[13,"Fatal",E,R[51],17,N],[3,R[37],E,R[38],N,N],[12,R[35],E,R[39],18,N],[12,"ty",E,R[40],18,N],[12,R[41],E,R[42],18,N],[12,"level",E,R[43],18,N],[12,R[34],E,R[44],18,N],[12,"data",E,R[45],18,N],[4,R[238],E,"An IP address, either IPv4, IPv6 or Auto.",N,N],[13,"Auto",E,"The IP address needs to be infered from the user's context.",19,N],[13,"Exact",E,"The exact given IP address (v4 or v6).",19,N],[3,"User",E,R[52],N,N],[12,"id",E,R[53],20,N],[12,"email",E,R[54],20,N],[12,R[55],E,R[56],20,N],[12,R[57],E,R[58],20,N],[12,"other",E,R[32],20,N],[3,"Request",E,"Represents http request data.",N,N],[12,"url",E,"The current URL of the request.",21,N],[12,"method",E,"The HTTP request method.",21,N],[12,"data",E,"Optionally some associated request data (human readable)",21,N],[12,"query_string",E,"Optionally the encoded query string.",21,N],[12,"cookies",E,"An encoded cookie string if available.",21,N],[12,"headers",E,"HTTP request headers.",21,N],[12,"env",E,"Optionally a CGI/WSGI etc. environment dictionary.",21,N],[3,R[239],E,"Holds information about the system SDK.",N,N],[12,"sdk_name",E,"The internal name of the SDK",22,N],[12,"version_major",E,"the major version of the SDK as integer or 0",22,N],[12,"version_minor",E,"the minor version of the SDK as integer or 0",22,N],[12,"version_patchlevel",E,"the patch version of the SDK as integer or 0",22,N],[4,R[240],E,"Represents a debug image.",N,N],[13,"Apple",E,"Apple debug images (machos). This is currently also used…",23,N],[13,"Symbolic",E,"Symbolic (new style) debug infos.",23,N],[13,"Proguard",E,"A reference to a proguard debug file.",23,N],[3,R[241],E,"Represents an apple debug image in the debug meta.",N,N],[12,"name",E,R[25],24,N],[12,"arch",E,R[26],24,N],[12,"cpu_type",E,"Alternatively a macho cpu type.",24,N],[12,"cpu_subtype",E,"Alternatively a macho cpu subtype.",24,N],[12,R[24],E,R[27],24,N],[12,R[28],E,R[29],24,N],[12,R[30],E,R[31],24,N],[12,"uuid",E,"The unique UUID of the image.",24,N],[3,R[242],E,"Represents a symbolic debug image.",N,N],[12,"name",E,R[25],25,N],[12,"arch",E,R[26],25,N],[12,R[24],E,R[27],25,N],[12,R[28],E,R[29],25,N],[12,R[30],E,R[31],25,N],[12,"id",E,"The unique debug id of the image.",25,N],[3,R[243],E,"Represents a proguard mapping file reference.",N,N],[12,"uuid",E,"The UUID of the associated proguard file.",26,N],[3,R[244],E,"Represents debug meta information.",N,N],[12,"sdk_info",E,"Optional system SDK information.",27,N],[12,"images",E,"A list of debug information files.",27,N],[3,R[245],E,"Information on the SDK client.",N,N],[12,"name",E,"The name of the SDK.",28,N],[12,R[33],E,"The version of the SDK.",28,N],[12,R[73],E,"An optional list of integrations that are enabled in this…",28,N],[12,"packages",E,"An optional list of packages that are installed in the…",28,N],[3,R[246],E,"Represents an installed package relevant to the SDK.",N,N],[12,"name",E,"The name of the package installed.",29,N],[12,R[33],E,"The version of the package.",29,N],[4,"Context",E,"Typed contextual data.",N,N],[13,"Device",E,"Device data.",30,N],[13,"Os",E,"Operating system data.",30,N],[13,"Runtime",E,"Runtime data.",30,N],[13,"App",E,"Application data.",30,N],[13,"Browser",E,"Web browser data.",30,N],[13,"Other",E,"Generic other context data.",30,N],[4,R[247],E,"Optional device screen orientation",N,N],[13,"Portrait",E,"Portrait device orientation.",31,N],[13,"Landscape",E,"Landscape device orientation.",31,N],[3,R[248],E,"Holds device information.",N,N],[12,"name",E,"The name of the device.",32,N],[12,"family",E,"The family of the device model.",32,N],[12,"model",E,"The device model (human readable).",32,N],[12,"model_id",E,"The device model (internal identifier).",32,N],[12,"arch",E,"The native cpu architecture of the device.",32,N],[12,"battery_level",E,"The current battery level (0-100).",32,N],[12,R[173],E,"The current screen orientation.",32,N],[12,"simulator",E,"Simulator/prod indicator.",32,N],[12,"memory_size",E,"Total memory available in byts.",32,N],[12,"free_memory",E,"How much memory is still available in bytes.",32,N],[12,"usable_memory",E,"How much memory is usable for the app in bytes.",32,N],[12,"storage_size",E,"Total storage size of the device in bytes.",32,N],[12,"free_storage",E,"How much storage is free in bytes.",32,N],[12,"external_storage_size",E,"Total size of the attached external storage in bytes (eg:…",32,N],[12,"external_free_storage",E,"Free size of the attached external storage in bytes (eg:…",32,N],[12,"boot_time",E,"Optionally an indicator when the device was booted.",32,N],[12,"timezone",E,"The timezone of the device.",32,N],[12,"other",E,R[32],32,N],[3,R[249],E,"Holds operating system information.",N,N],[12,"name",E,"The name of the operating system.",33,N],[12,R[33],E,"The version of the operating system.",33,N],[12,"build",E,"The internal build number of the operating system.",33,N],[12,"kernel_version",E,"The current kernel version.",33,N],[12,"rooted",E,"An indicator if the os is rooted (mobile mostly).",33,N],[12,"other",E,R[32],33,N],[3,R[250],E,"Holds information about the runtime.",N,N],[12,"name",E,"The name of the runtime (for instance JVM).",34,N],[12,R[33],E,"The version of the runtime.",34,N],[12,"other",E,R[32],34,N],[3,R[251],E,"Holds app information.",N,N],[12,"app_start_time",E,"Optional start time of the app.",35,N],[12,"device_app_hash",E,"Optional device app hash (app specific device ID)",35,N],[12,"build_type",E,"Optional build identicator.",35,N],[12,"app_identifier",E,"Optional app identifier (dotted bundle id).",35,N],[12,"app_name",E,"Application name as it appears on the platform.",35,N],[12,"app_version",E,"Application version as it appears on the platform.",35,N],[12,"app_build",E,"Internal build ID as it appears on the platform.",35,N],[12,"other",E,R[32],35,N],[3,R[252],E,"Holds information about the web browser.",N,N],[12,"name",E,"The name of the browser (for instance \"Chrome\").",36,N],[12,R[33],E,"The version of the browser.",36,N],[12,"other",E,R[32],36,N],[3,"Event",E,"Represents a full event for Sentry.",N,N],[12,"event_id",E,"The ID of the event",37,N],[12,"level",E,"The level of the event (defaults to error)",37,N],[12,"fingerprint",E,"An optional fingerprint configuration to override the…",37,N],[12,"culprit",E,"The culprit of the event.",37,N],[12,"transaction",E,"The transaction name of the event.",37,N],[12,R[34],E,"A message to be sent with the event.",37,N],[12,R[181],E,"Optionally a log entry that can be used instead of the…",37,N],[12,"logger",E,"Optionally the name of the logger that created this event.",37,N],[12,"modules",E,"Optionally a name to version mapping of installed modules.",37,N],[12,"platform",E,"A platform identifier for this event.",37,N],[12,R[35],E,"The timestamp of when the event was created.",37,N],[12,R[60],E,"Optionally the server (or device) name of this event.",37,N],[12,"release",E,"A release identifier.",37,N],[12,"dist",E,"An optional distribution identifer.",37,N],[12,R[59],E,"An optional environment identifier.",37,N],[12,"user",E,"Optionally user data to be sent along.",37,N],[12,R[184],E,"Optionally HTTP request data to be sent along.",37,N],[12,"contexts",E,"Optional contexts.",37,N],[12,"breadcrumbs",E,"List of breadcrumbs to send along.",37,N],[12,R[36],E,"Exceptions to be attached (one or multiple if chained).",37,N],[12,R[22],E,"A single stacktrace (deprecated)",37,N],[12,"template",E,"Simplified template error location info",37,N],[12,"threads",E,"A list of threads.",37,N],[12,"tags",E,"Optional tags to be attached to the event.",37,N],[12,"extra",E,"Optional extra information to be sent with the event.",37,N],[12,"debug_meta",E,"Debug meta information.",37,N],[12,"sdk",E,"SDK metadata",37,N],[3,R[37],"sentry",R[38],N,N],[12,R[35],E,R[39],18,N],[12,"ty",E,R[40],18,N],[12,R[41],E,R[42],18,N],[12,"level",E,R[43],18,N],[12,R[34],E,R[44],18,N],[12,"data",E,R[45],18,N],[4,"Level",E,R[46],N,N],[13,"Debug",E,R[47],17,N],[13,"Info",E,R[48],17,N],[13,"Warning",E,R[49],17,N],[13,"Error",E,R[50],17,N],[13,"Fatal",E,R[51],17,N],[3,"User",E,R[52],N,N],[12,"id",E,R[53],20,N],[12,"email",E,R[54],20,N],[12,R[55],E,R[56],20,N],[12,R[57],E,R[58],20,N],[12,"other",E,R[32],20,N],[3,"Hub",E,"The central object that can manages scopes and clients.",N,N],[3,"Scope",E,"Holds contextual data for the current scope.",N,N],[3,"Client",E,"The Sentry client object.",N,N],[3,R[253],E,"Configuration settings for the client.",N,N],[12,"dsn",E,"The DSN to use. If not set the client is effectively…",38,N],[12,R[101],E,"The transport to use.",38,N],[12,"in_app_include",E,"module prefixes that are always considered in_app",38,N],[12,"in_app_exclude",E,"module prefixes that are never in_app",38,N],[12,"extra_border_frames",E,"border frames which indicate a border from a backtrace to…",38,N],[12,"max_breadcrumbs",E,"Maximum number of breadcrumbs (0 to disable feature).",38,N],[12,"trim_backtraces",E,"Automatically trim backtraces of junk before sending.",38,N],[12,"release",E,"The release to be sent with events.",38,N],[12,R[59],E,"The environment to be sent with events.",38,N],[12,R[60],E,"The server name to be reported.",38,N],[12,"sample_rate",E,"The sample rate for event submission (0.0 - 1.0, defaults…",38,N],[12,"user_agent",E,"The user agent that should be reported.",38,N],[12,"http_proxy",E,"An optional HTTP proxy to use.",38,N],[12,"https_proxy",E,"An optional HTTPS proxy to use.",38,N],[12,"shutdown_timeout",E,"The timeout on client drop for draining events on shutdown.",38,N],[12,"debug",E,"Enables debug mode.",38,N],[12,"attach_stacktrace",E,"Attaches stacktraces to messages.",38,N],[12,"send_default_pii",E,"If turned on some default PII informat is attached.",38,N],[12,"before_send",E,"Before send callback.",38,N],[12,"before_breadcrumb",E,"Before breadcrumb add callback.",38,N],[5,R[62],E,"Captures an event on the currently active client if any.",N,[[["event"]],["uuid"]]],[5,R[63],E,R[64],N,[[["level"],["str"]],["uuid"]]],[5,R[71],E,"Records a breadcrumb by calling a function.",N,[[[R[72]]]]],[5,R[69],E,R[70],N,[[["f"]],["r"]]],[5,R[67],E,R[68],N,[[["c"],["f"]],["r"]]],[5,R[61],E,"Returns the last event ID captured.",N,[[],[[R[66],["uuid"]],["uuid"]]]],[5,"init",E,"Creates the Sentry client for a given client config and…",N,[[[R[65]],["into",[R[65]]]],["clientinitguard"]]],[11,"new",E,"Creates a new hub from the given client and scope.",39,[[[R[66],["arc"]],["scope"],["arc",["scope"]],["arc",[R[65]]]],["hub"]]],[11,"new_from_top",E,"Creates a new hub based on the top scope of the given hub.",39,[[["asref",["hub"]],["hub"]],["hub"]]],[11,"current",E,"Returns the current hub.",39,[[],[["arc",["hub"]],["hub"]]]],[11,"main",E,"Returns the main thread's hub.",39,[[],[["arc",["hub"]],["hub"]]]],[11,"with",E,"Invokes the callback with the default hub.",39,[[["f"]],["r"]]],[11,"with_active",E,"Like `Hub::with` but only calls the function if a client…",39,[[["f"]],["r"]]],[11,"run",E,"Binds a hub to the current thread for the duration of the…",39,[[["arc",["hub"]],["fnonce"],["hub"]],["r"]]],[11,R[61],E,"Returns the last event id.",39,[[["self"]],[["uuid"],[R[66],["uuid"]]]]],[11,R[62],E,"Sends the event to the current client with the current…",39,[[["event"],["self"]],["uuid"]]],[11,R[63],E,R[64],39,[[["level"],["self"],["str"]],["uuid"]]],[11,R[65],E,"Returns the currently bound client.",39,[[["self"]],[["arc",[R[65]]],[R[66],["arc"]]]]],[11,"bind_client",E,"Binds a new client to the hub.",39,[[[R[66],["arc"]],["self"],["arc",[R[65]]]]]],[11,"push_scope",E,"Pushes a new scope.",39,[[["self"]],[R[204]]]],[11,R[67],E,R[68],39,[[["c"],["self"],["f"]],["r"]]],[11,R[69],E,R[70],39,[[["self"],["f"]],["r"]]],[11,R[71],E,"Adds a new breadcrumb to the current scope.",39,[[[R[72]],["self"]]]],[11,"clear",E,"Clear the scope.",40,[[["self"]]]],[11,"set_level",E,"Sets a level override.",40,[[["self"],[R[66],["level"]],["level"]]]],[11,"set_fingerprint",E,"Sets the fingerprint.",40,[[["self"],[R[66]]]]],[11,"set_transaction",E,"Sets the transaction.",40,[[["self"],[R[66],["str"]],["str"]]]],[11,"set_user",E,"Sets the user for the current scope.",40,[[["self"],["user"],[R[66],["user"]]]]],[11,"set_tag",E,"Sets a tag to a specific value.",40,[[["self"],["tostring"],["str"]]]],[11,"remove_tag",E,"Removes a tag.",40,[[["self"],["str"]]]],[11,"set_context",E,"Sets a context for a key.",40,[[["self"],["into",[R[85]]],[R[85]],["str"]]]],[11,"remove_context",E,"Removes a context for a key.",40,[[["self"],["str"]]]],[11,"set_extra",E,"Sets a extra to a specific value.",40,[[["self"],[R[0]],["str"]]]],[11,"remove_extra",E,"Removes a extra.",40,[[["self"],["str"]]]],[11,"add_event_processor",E,"Add an event processor to the scope.",40,[[["self"],["box",["fn"]],["fn"]]]],[11,"apply_to_event",E,"Applies the contained scoped data to fill an event.",40,[[["event"],["self"]],[[R[66],["event"]],["event"]]]],[0,R[73],E,"This module provides support for various integrations.",N,N],[0,"failure",R[79],"Adds support for the failure crate.",N,N],[5,"exception_from_single_fail","sentry::integrations::failure","This converts a single fail instance into an exception.",N,[[["f"],[R[74]],[R[66],[R[74]]]],[R[36]]]],[5,"event_from_error",E,"Helper function to create an event from a `failure::Error`.",N,[[[R[2]]],["event"]]],[5,"event_from_fail",E,"Helper function to create an event from a `failure::Fail`.",N,[[["f"]],["event"]]],[5,R[75],E,R[76],N,[[[R[2]]],["uuid"]]],[5,R[77],E,R[78],N,[[["f"]],["uuid"]]],[8,R[254],E,"Hub extension methods for working with failure.",N,N],[10,R[75],E,R[76],41,[[["self"],[R[2]]],["uuid"]]],[10,R[77],E,R[78],41,[[["f"],["self"]],["uuid"]]],[8,R[255],E,"Extension trait providing methods to unwrap a result,…",N,N],[16,"Value",E,"Type of the success case",42,N],[10,"fallible_unwrap",E,"Unwraps the result, panicking if it contains an error. Any…",42,[[]]],[0,"log",R[79],"Adds support for automatic breadcrumb capturing from logs.",N,N],[3,R[256],R[115],"Logger specific options.",N,N],[12,"global_filter",E,"The global filter that should be used (also used before…",43,N],[12,"filter",E,"The sentry specific log level filter (defaults to `Info`)",43,N],[12,"emit_breadcrumbs",E,"If set to `true`, breadcrumbs will be emitted. (defaults…",43,N],[12,"emit_error_events",E,"If set to `true` error events will be sent for errors in…",43,N],[12,"emit_warning_events",E,"If set to `true` warning events will be sent for warnings…",43,N],[12,"attach_stacktraces",E,"If set to `true` current stacktrace will be resolved and…",43,N],[3,"Logger",E,"Provides a dispatching logger.",N,N],[5,"breadcrumb_from_record",E,"Creates a breadcrumb from a given log record.",N,[[["record"]],[R[175]]]],[5,"event_from_record",E,"Creates an event from a given log record.",N,[[["record"],["bool"]],["event"]]],[5,"init",E,"Initializes the logging system.",N,[[[R[80]],["box",["log"]],[R[66],["box"]]]]],[11,"new",E,"Initializes a new logger.",44,[[[R[80]],["box",["log"]],[R[66],["box"]]],["logger"]]],[11,"options",E,"Returns the options of the logger.",44,[[["self"]],[R[80]]]],[11,"dest_log",E,"Returns the destination logger.",44,[[["self"]],[[R[66],["log"]],["log"]]]],[0,"env_logger",R[79],"Adds support for automatic breadcrumb capturing from logs…",N,N],[5,"init","sentry::integrations::env_logger","Initializes the environment logger.",N,[[[R[66],["logger"]],["logger"],[R[80]]]]],[0,"panic",R[79],"Panic handler support.",N,N],[5,"message_from_panic_info","sentry::integrations::panic","Extract the message of a panic.",N,[[[R[81]]],["str"]]],[5,"event_from_panic_info",E,"Creates an event from the given panic info.",N,[[[R[81]]],["event"]]],[5,"panic_handler",E,"A panic handler that sends to Sentry.",N,[[[R[81]]]]],[5,"register_panic_handler",E,"Registes the panic handler.",N,[[]]],[11,"from_config","sentry","Creates a new Sentry client from a config.",45,[[["into",[R[82]]],[R[82]]],[R[65]]]],[11,"with_options",E,"Creates a new sentry client for the given options.",45,[[[R[82]]],[R[65]]]],[11,"options",E,"Returns the options of this client.",45,[[["self"]],[R[82]]]],[11,"dsn",E,"Returns the DSN that constructed this client.",45,[[["self"]],[["dsn"],[R[66],["dsn"]]]]],[11,R[218],E,"Quick check to see if the client is enabled.",45,[[["self"]],["bool"]]],[11,R[62],E,"Captures an event and sends it to sentry.",45,[[[R[66],["scope"]],["event"],["self"],["scope"]],["uuid"]]],[11,"close",E,"Drains all pending events and shuts down the transport…",45,[[["self"],[R[66],[R[83]]],[R[83]]],["bool"]]],[0,"utils",E,"Useful utilities for working with events.",N,N],[5,"device_model","sentry::utils","Returns the model identifier.",N,[[],[[R[66],[R[84]]],[R[84]]]]],[5,"device_family",E,"Returns the model family identifier.",N,[[],[[R[66],[R[84]]],[R[84]]]]],[5,"cpu_arch",E,"Returns the CPU architecture.",N,[[],[[R[66],[R[84]]],[R[84]]]]],[5,R[60],E,"Returns the server name (hostname) if available.",N,[[],[[R[66],[R[84]]],[R[84]]]]],[5,"os_context",E,"Returns the OS context",N,[[],[[R[85]],[R[66],[R[85]]]]]],[5,"rust_context",E,"Returns the rust info.",N,[[],[[R[85]],[R[66],[R[85]]]]]],[5,"device_context",E,"Returns the device context.",N,[[],[[R[85]],[R[66],[R[85]]]]]],[5,"debug_images",E,"Returns the loaded debug images.",N,[[],[["vec",[R[86]]],[R[86]]]]],[5,"current_thread",E,"Captures information about the current thread.",N,[[["bool"]],["thread"]]],[5,"current_stacktrace",E,"Returns the current backtrace as sentry stacktrace.",N,[[],[[R[22]],[R[66],[R[22]]]]]],[0,"internals","sentry","Useful internals.",N,N],[3,"Auth",R[113],"Represents an auth header.",N,N],[3,R[273],E,"An error from the `parse` function.",N,N],[3,"DateTime",E,"ISO 8601 combined date and time with time zone.",N,N],[3,"DebugId",E,R[87],N,N],[3,"Dsn",E,"Represents a Sentry dsn.",N,N],[4,R[257],E,"Represents a dsn url parsing error.",N,N],[13,"InvalidUrl",E,"raised on completely invalid urls",46,N],[13,"InvalidScheme",E,"raised the scheme is invalid / unsupported.",46,N],[13,"NoUsername",E,"raised if the username (public key) portion is missing.",46,N],[13,"NoProjectId",E,"raised the project is is missing (first path component)",46,N],[13,"InvalidProjectId",E,"raised the project id is invalid.",46,N],[3,R[88],E,R[89],N,N],[3,R[274],E,"Represents a project ID.",N,N],[4,R[258],E,"Raised if a project ID cannot be parsed from a string.",N,N],[13,"InvalidValue",E,"Raised if the value is not an integer in the supported…",47,N],[13,"EmptyValue",E,"Raised if an empty value is parsed.",47,N],[4,"Scheme",E,"Represents the scheme of an url http/https.",N,N],[13,"Http",E,"unencrypted HTTP scheme (should not be used)",48,N],[13,"Https",E,"encrypted HTTPS scheme",48,N],[8,"TimeZone",E,"The time zone.",N,N],[16,"Offset",E,"An associated offset type. This type is used to store the…",49,N],[11,"ymd",E,R[90],49,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt",E,R[90],49,[[["u32"],["i32"],["self"]],[["date"],[R[92],["date"]]]]],[11,"yo",E,R[91],49,[[["self"],["u32"],["i32"]],["date"]]],[11,"yo_opt",E,R[91],49,[[["self"],["u32"],["i32"]],[["date"],[R[92],["date"]]]]],[11,"isoywd",E,R[93],49,[[["u32"],["i32"],["self"],["weekday"]],["date"]]],[11,"isoywd_opt",E,R[93],49,[[["u32"],["i32"],["self"],["weekday"]],[["date"],[R[92],["date"]]]]],[11,R[35],E,R[94],49,[[["i64"],["self"],["u32"]],[R[95]]]],[11,"timestamp_opt",E,R[94],49,[[["i64"],["self"],["u32"]],[[R[92],[R[95]]],[R[95]]]]],[11,R[221],E,R[96],49,[[["i64"],["self"]],[R[95]]]],[11,"timestamp_millis_opt",E,R[96],49,[[["i64"],["self"]],[[R[92],[R[95]]],[R[95]]]]],[11,R[222],E,R[96],49,[[["i64"],["self"]],[R[95]]]],[11,"datetime_from_str",E,R[223],49,[[["self"],["str"]],[[R[97]],[R[1],[R[95],R[97]]],[R[95]]]]],[10,R[194],E,"Reconstructs the time zone from the offset.",49,[[],["self"]]],[10,R[195],E,"Creates the offset(s) for given local `NaiveDate` if…",49,[[["self"],[R[98]]],[R[92]]]],[10,R[196],E,"Creates the offset(s) for given local `NaiveDateTime` if…",49,[[["self"],[R[99]]],[R[92]]]],[11,"from_local_date",E,"Converts the local `NaiveDate` to the timezone-aware…",49,[[["self"],[R[98]]],[["date"],[R[92],["date"]]]]],[11,"from_local_datetime",E,"Converts the local `NaiveDateTime` to the timezone-aware…",49,[[["self"],[R[99]]],[[R[92],[R[95]]],[R[95]]]]],[10,R[197],E,"Creates the offset for given UTC `NaiveDate`. This cannot…",49,[[["self"],[R[98]]]]],[10,R[198],E,"Creates the offset for given UTC `NaiveDateTime`. This…",49,[[["self"],[R[99]]]]],[11,"from_utc_date",E,"Converts the UTC `NaiveDate` to the local time. The UTC is…",49,[[["self"],[R[98]]],["date"]]],[11,"from_utc_datetime",E,"Converts the UTC `NaiveDateTime` to the local time. The…",49,[[["self"],[R[99]]],[R[95]]]],[3,"Utc",E,"The UTC time zone. This is the most efficient time zone…",N,N],[3,"Uuid",E,"A Universally Unique Identifier (UUID).",N,N],[4,R[259],E,"The reserved variants of UUIDs.",N,N],[13,"NCS",E,"Reserved by the NCS for backward compatibility",50,N],[13,"RFC4122",E,"As described in the RFC4122 Specification (default)",50,N],[13,"Microsoft",E,"Reserved by Microsoft for backward compatibility",50,N],[13,"Future",E,"Reserved for future expansion",50,N],[4,R[260],E,"The version of the UUID, denoting the generating algorithm.",N,N],[13,"Nil",E,"Special case for `nil` [`Uuid`].",51,N],[13,"Mac",E,"Version 1: MAC address",51,N],[13,"Dce",E,"Version 2: DCE Security",51,N],[13,"Md5",E,"Version 3: MD5 hash",51,N],[13,"Random",E,"Version 4: Random",51,N],[13,"Sha1",E,"Version 5: SHA-1 hash",51,N],[3,R[269],E,"A scope guard.",N,N],[3,R[270],E,"Helper struct that is returned from `init`.",N,N],[8,R[261],E,"A helper trait that converts an object into a breadcrumb.",N,N],[16,"Output",E,"The iterator type for the breadcrumbs.",52,N],[10,R[201],E,"This converts the object into an optional breadcrumb.",52,[[]]],[8,"IntoDsn",E,"Helper trait to convert a string into an `Option<Dsn>`.",N,N],[10,"into_dsn",E,"Converts the value into a `Result<Option<Dsn>, E>`.",53,[[],[[R[1],[R[66],R[100]]],[R[66],["dsn"]],[R[100]]]]],[8,R[262],E,"The trait for transports.",N,N],[10,R[202],E,"Sends an event.",54,[[["event"],["self"]]]],[11,R[219],E,R[220],54,[[["self"],[R[83]]],["bool"]]],[8,R[263],E,"A factory creating transport instances.",N,N],[10,R[203],E,"Given some options creates a transport.",55,[[["self"],[R[82]]],[["box",[R[101]]],[R[101]]]]],[0,"transports","sentry","The provided transports.",N,N],[3,R[271],R[116],"Creates the default HTTP transport.",N,N],[3,R[272],E,"A transport can send events via HTTP to sentry via…",N,N],[6,"HttpTransport",E,"The default http transport.",N,N],[14,"release_name","sentry","Returns the intended release for Sentry as an…",N,N],[11,R[107],R[102],E,0,[[["self"]],[R[84]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[108],E,E,0,[[["self"]],[T]]],[11,R[103],E,E,0,[[[T],["self"]]]],[11,R[104],E,E,0,[[[U]],[R[1]]]],[11,R[105],E,E,0,[[],[R[1]]]],[11,R[106],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[111],E,E,0,[[["self"]],["typeid"]]],[11,R[104],E,E,0,[[["str"]],[R[1]]]],[11,R[105],E,E,0,[[],[R[1]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[110],E,E,56,[[],["i"]]],[11,R[108],E,E,56,[[["self"]],[T]]],[11,R[103],E,E,56,[[[T],["self"]]]],[11,R[104],E,E,56,[[[U]],[R[1]]]],[11,R[105],E,E,56,[[],[R[1]]]],[11,R[106],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[111],E,E,56,[[["self"]],["typeid"]]],[11,R[105],E,E,56,[[],[R[1]]]],[11,R[107],E,E,57,[[["self"]],[R[84]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[108],E,E,57,[[["self"]],[T]]],[11,R[103],E,E,57,[[[T],["self"]]]],[11,R[104],E,E,57,[[[U]],[R[1]]]],[11,R[105],E,E,57,[[],[R[1]]]],[11,R[106],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[111],E,E,57,[[["self"]],["typeid"]]],[11,R[104],E,E,57,[[["str"]],[R[1]]]],[11,R[105],E,E,57,[[],[R[1]]]],[11,"from",R[109],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[110],E,E,58,[[],["i"]]],[11,R[104],E,E,58,[[[U]],[R[1]]]],[11,R[105],E,E,58,[[],[R[1]]]],[11,R[106],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[111],E,E,58,[[["self"]],["typeid"]]],[11,R[105],E,E,58,[[],[R[1]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[104],E,E,59,[[[U]],[R[1]]]],[11,R[105],E,E,59,[[],[R[1]]]],[11,R[106],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[111],E,E,59,[[["self"]],["typeid"]]],[11,R[105],E,E,59,[[],[R[1]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[110],E,E,60,[[],["i"]]],[11,R[108],E,E,60,[[["self"]],[T]]],[11,R[103],E,E,60,[[[T],["self"]]]],[11,R[104],E,E,60,[[[U]],[R[1]]]],[11,R[105],E,E,60,[[],[R[1]]]],[11,R[106],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[111],E,E,60,[[["self"]],["typeid"]]],[11,R[114],E,E,60,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,60,[[],[R[1]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[104],E,E,61,[[[U]],[R[1]]]],[11,R[105],E,E,61,[[],[R[1]]]],[11,R[106],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[111],E,E,61,[[["self"]],["typeid"]]],[11,R[105],E,E,61,[[],[R[1]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[110],E,E,62,[[],["i"]]],[11,R[108],E,E,62,[[["self"]],[T]]],[11,R[103],E,E,62,[[[T],["self"]]]],[11,R[104],E,E,62,[[[U]],[R[1]]]],[11,R[105],E,E,62,[[],[R[1]]]],[11,R[106],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[111],E,E,62,[[["self"]],["typeid"]]],[11,R[105],E,E,62,[[],[R[1]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[104],E,E,1,[[[U]],[R[1]]]],[11,R[105],E,E,1,[[],[R[1]]]],[11,R[106],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[111],E,E,1,[[["self"]],["typeid"]]],[11,R[105],E,E,1,[[],[R[1]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[110],E,E,63,[[],["i"]]],[11,R[108],E,E,63,[[["self"]],[T]]],[11,R[103],E,E,63,[[[T],["self"]]]],[11,R[104],E,E,63,[[[U]],[R[1]]]],[11,R[105],E,E,63,[[],[R[1]]]],[11,R[106],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[111],E,E,63,[[["self"]],["typeid"]]],[11,R[105],E,E,63,[[],[R[1]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[110],E,E,64,[[],["i"]]],[11,R[104],E,E,64,[[[U]],[R[1]]]],[11,R[105],E,E,64,[[],[R[1]]]],[11,R[106],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[111],E,E,64,[[["self"]],["typeid"]]],[11,R[105],E,E,64,[[],[R[1]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[110],E,E,65,[[],["i"]]],[11,R[108],E,E,65,[[["self"]],[T]]],[11,R[103],E,E,65,[[[T],["self"]]]],[11,R[104],E,E,65,[[[U]],[R[1]]]],[11,R[105],E,E,65,[[],[R[1]]]],[11,R[106],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[111],E,E,65,[[["self"]],["typeid"]]],[11,R[105],E,E,65,[[],[R[1]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[110],E,E,66,[[],["i"]]],[11,R[104],E,E,66,[[[U]],[R[1]]]],[11,R[105],E,E,66,[[],[R[1]]]],[11,R[106],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[111],E,E,66,[[["self"]],["typeid"]]],[11,R[105],E,E,66,[[],[R[1]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[110],E,E,67,[[],["i"]]],[11,R[104],E,E,67,[[[U]],[R[1]]]],[11,R[105],E,E,67,[[],[R[1]]]],[11,R[106],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[111],E,E,67,[[["self"]],["typeid"]]],[11,R[105],E,E,67,[[],[R[1]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[110],E,E,68,[[],["i"]]],[11,R[108],E,E,68,[[["self"]],[T]]],[11,R[103],E,E,68,[[[T],["self"]]]],[11,R[104],E,E,68,[[[U]],[R[1]]]],[11,R[105],E,E,68,[[],[R[1]]]],[11,R[106],E,E,68,[[["self"]],[T]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[111],E,E,68,[[["self"]],["typeid"]]],[11,R[105],E,E,68,[[],[R[1]]]],[11,R[107],R[112],E,69,[[["self"]],[R[84]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[104],E,E,69,[[[U]],[R[1]]]],[11,R[105],E,E,69,[[],[R[1]]]],[11,R[106],E,E,69,[[["self"]],[T]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[111],E,E,69,[[["self"]],["typeid"]]],[11,R[105],E,E,69,[[],[R[1]]]],[11,R[107],R[113],E,70,[[["self"]],[R[84]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[108],E,E,70,[[["self"]],[T]]],[11,R[103],E,E,70,[[[T],["self"]]]],[11,R[104],E,E,70,[[[U]],[R[1]]]],[11,R[105],E,E,70,[[],[R[1]]]],[11,R[106],E,E,70,[[["self"]],[T]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[111],E,E,70,[[["self"]],["typeid"]]],[11,R[114],E,E,70,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,70,[[["str"]],[R[1]]]],[11,R[105],E,E,70,[[],[R[1]]]],[11,R[107],E,E,71,[[["self"]],[R[84]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[108],E,E,71,[[["self"]],[T]]],[11,R[103],E,E,71,[[[T],["self"]]]],[11,R[104],E,E,71,[[[U]],[R[1]]]],[11,R[105],E,E,71,[[],[R[1]]]],[11,R[106],E,E,71,[[["self"]],[T]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[111],E,E,71,[[["self"]],["typeid"]]],[11,"as_fail",E,E,71,[[["self"]],["fail"]]],[11,R[114],E,E,71,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,71,[[],[R[1]]]],[11,"from",R[5],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[110],E,E,2,[[],["i"]]],[11,R[108],E,E,2,[[["self"]],[T]]],[11,R[103],E,E,2,[[[T],["self"]]]],[11,R[104],E,E,2,[[[U]],[R[1]]]],[11,R[105],E,E,2,[[],[R[1]]]],[11,R[106],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[111],E,E,2,[[["self"]],["typeid"]]],[11,R[105],E,E,2,[[],[R[1]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[108],E,E,3,[[["self"]],[T]]],[11,R[103],E,E,3,[[[T],["self"]]]],[11,R[104],E,E,3,[[[U]],[R[1]]]],[11,R[105],E,E,3,[[],[R[1]]]],[11,R[106],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[111],E,E,3,[[["self"]],["typeid"]]],[11,R[105],E,E,3,[[],[R[1]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[108],E,E,4,[[["self"]],[T]]],[11,R[103],E,E,4,[[[T],["self"]]]],[11,R[104],E,E,4,[[[U]],[R[1]]]],[11,R[105],E,E,4,[[],[R[1]]]],[11,R[106],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[111],E,E,4,[[["self"]],["typeid"]]],[11,R[105],E,E,4,[[],[R[1]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[108],E,E,5,[[["self"]],[T]]],[11,R[103],E,E,5,[[[T],["self"]]]],[11,R[104],E,E,5,[[[U]],[R[1]]]],[11,R[105],E,E,5,[[],[R[1]]]],[11,R[106],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[111],E,E,5,[[["self"]],["typeid"]]],[11,R[105],E,E,5,[[],[R[1]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[108],E,E,6,[[["self"]],[T]]],[11,R[103],E,E,6,[[[T],["self"]]]],[11,R[104],E,E,6,[[[U]],[R[1]]]],[11,R[105],E,E,6,[[],[R[1]]]],[11,R[106],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[111],E,E,6,[[["self"]],["typeid"]]],[11,R[105],E,E,6,[[],[R[1]]]],[11,R[107],E,E,7,[[["self"]],[R[84]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[108],E,E,7,[[["self"]],[T]]],[11,R[103],E,E,7,[[[T],["self"]]]],[11,R[104],E,E,7,[[[U]],[R[1]]]],[11,R[105],E,E,7,[[],[R[1]]]],[11,R[106],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[111],E,E,7,[[["self"]],["typeid"]]],[11,R[114],E,E,7,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,7,[[],[R[1]]]],[11,R[107],E,E,8,[[["self"]],[R[84]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[108],E,E,8,[[["self"]],[T]]],[11,R[103],E,E,8,[[[T],["self"]]]],[11,R[104],E,E,8,[[[U]],[R[1]]]],[11,R[105],E,E,8,[[],[R[1]]]],[11,R[106],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[111],E,E,8,[[["self"]],["typeid"]]],[11,R[114],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,8,[[["str"]],[R[1]]]],[11,R[105],E,E,8,[[],[R[1]]]],[11,R[107],E,E,9,[[["self"]],[R[84]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[108],E,E,9,[[["self"]],[T]]],[11,R[103],E,E,9,[[[T],["self"]]]],[11,R[104],E,E,9,[[[U]],[R[1]]]],[11,R[105],E,E,9,[[],[R[1]]]],[11,R[106],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[111],E,E,9,[[["self"]],["typeid"]]],[11,R[114],E,E,9,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,9,[[["str"]],[R[1]]]],[11,R[105],E,E,9,[[],[R[1]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[108],E,E,10,[[["self"]],[T]]],[11,R[103],E,E,10,[[[T],["self"]]]],[11,R[104],E,E,10,[[[U]],[R[1]]]],[11,R[105],E,E,10,[[],[R[1]]]],[11,R[106],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[111],E,E,10,[[["self"]],["typeid"]]],[11,R[105],E,E,10,[[],[R[1]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[108],E,E,11,[[["self"]],[T]]],[11,R[103],E,E,11,[[[T],["self"]]]],[11,R[104],E,E,11,[[[U]],[R[1]]]],[11,R[105],E,E,11,[[],[R[1]]]],[11,R[106],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[111],E,E,11,[[["self"]],["typeid"]]],[11,R[114],E,E,11,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,11,[[],[R[1]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[108],E,E,12,[[["self"]],[T]]],[11,R[103],E,E,12,[[[T],["self"]]]],[11,R[104],E,E,12,[[[U]],[R[1]]]],[11,R[105],E,E,12,[[],[R[1]]]],[11,R[106],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[111],E,E,12,[[["self"]],["typeid"]]],[11,R[114],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,12,[[],[R[1]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[108],E,E,13,[[["self"]],[T]]],[11,R[103],E,E,13,[[[T],["self"]]]],[11,R[104],E,E,13,[[[U]],[R[1]]]],[11,R[105],E,E,13,[[],[R[1]]]],[11,R[106],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[111],E,E,13,[[["self"]],["typeid"]]],[11,R[114],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,13,[[],[R[1]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[108],E,E,14,[[["self"]],[T]]],[11,R[103],E,E,14,[[[T],["self"]]]],[11,R[104],E,E,14,[[[U]],[R[1]]]],[11,R[105],E,E,14,[[],[R[1]]]],[11,R[106],E,E,14,[[["self"]],[T]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[111],E,E,14,[[["self"]],["typeid"]]],[11,R[105],E,E,14,[[],[R[1]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[108],E,E,15,[[["self"]],[T]]],[11,R[103],E,E,15,[[[T],["self"]]]],[11,R[104],E,E,15,[[[U]],[R[1]]]],[11,R[105],E,E,15,[[],[R[1]]]],[11,R[106],E,E,15,[[["self"]],[T]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[111],E,E,15,[[["self"]],["typeid"]]],[11,R[105],E,E,15,[[],[R[1]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[108],E,E,16,[[["self"]],[T]]],[11,R[103],E,E,16,[[[T],["self"]]]],[11,R[104],E,E,16,[[[U]],[R[1]]]],[11,R[105],E,E,16,[[],[R[1]]]],[11,R[106],E,E,16,[[["self"]],[T]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[111],E,E,16,[[["self"]],["typeid"]]],[11,R[105],E,E,16,[[],[R[1]]]],[11,R[107],E,E,72,[[["self"]],[R[84]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[104],E,E,72,[[[U]],[R[1]]]],[11,R[105],E,E,72,[[],[R[1]]]],[11,R[106],E,E,72,[[["self"]],[T]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[111],E,E,72,[[["self"]],["typeid"]]],[11,"as_fail",E,E,72,[[["self"]],["fail"]]],[11,R[105],E,E,72,[[],[R[1]]]],[11,R[107],"sentry",E,17,[[["self"]],[R[84]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[108],E,E,17,[[["self"]],[T]]],[11,R[103],E,E,17,[[[T],["self"]]]],[11,R[104],E,E,17,[[[U]],[R[1]]]],[11,R[105],E,E,17,[[],[R[1]]]],[11,R[106],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[111],E,E,17,[[["self"]],["typeid"]]],[11,R[114],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,17,[[["str"]],[R[1]]]],[11,R[105],E,E,17,[[],[R[1]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[108],E,E,18,[[["self"]],[T]]],[11,R[103],E,E,18,[[[T],["self"]]]],[11,R[104],E,E,18,[[[U]],[R[1]]]],[11,R[105],E,E,18,[[],[R[1]]]],[11,R[106],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[111],E,E,18,[[["self"]],["typeid"]]],[11,R[105],E,E,18,[[],[R[1]]]],[11,R[107],R[5],E,19,[[["self"]],[R[84]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[108],E,E,19,[[["self"]],[T]]],[11,R[103],E,E,19,[[[T],["self"]]]],[11,R[104],E,E,19,[[[U]],[R[1]]]],[11,R[105],E,E,19,[[],[R[1]]]],[11,R[106],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[111],E,E,19,[[["self"]],["typeid"]]],[11,R[114],E,E,19,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,19,[[["str"]],[R[1]]]],[11,R[105],E,E,19,[[],[R[1]]]],[11,"from","sentry",E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[108],E,E,20,[[["self"]],[T]]],[11,R[103],E,E,20,[[[T],["self"]]]],[11,R[104],E,E,20,[[[U]],[R[1]]]],[11,R[105],E,E,20,[[],[R[1]]]],[11,R[106],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[111],E,E,20,[[["self"]],["typeid"]]],[11,R[105],E,E,20,[[],[R[1]]]],[11,"from",R[5],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[108],E,E,21,[[["self"]],[T]]],[11,R[103],E,E,21,[[[T],["self"]]]],[11,R[104],E,E,21,[[[U]],[R[1]]]],[11,R[105],E,E,21,[[],[R[1]]]],[11,R[106],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[111],E,E,21,[[["self"]],["typeid"]]],[11,R[105],E,E,21,[[],[R[1]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[108],E,E,22,[[["self"]],[T]]],[11,R[103],E,E,22,[[[T],["self"]]]],[11,R[104],E,E,22,[[[U]],[R[1]]]],[11,R[105],E,E,22,[[],[R[1]]]],[11,R[106],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[111],E,E,22,[[["self"]],["typeid"]]],[11,R[105],E,E,22,[[],[R[1]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[108],E,E,23,[[["self"]],[T]]],[11,R[103],E,E,23,[[[T],["self"]]]],[11,R[104],E,E,23,[[[U]],[R[1]]]],[11,R[105],E,E,23,[[],[R[1]]]],[11,R[106],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[111],E,E,23,[[["self"]],["typeid"]]],[11,R[105],E,E,23,[[],[R[1]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[108],E,E,24,[[["self"]],[T]]],[11,R[103],E,E,24,[[[T],["self"]]]],[11,R[104],E,E,24,[[[U]],[R[1]]]],[11,R[105],E,E,24,[[],[R[1]]]],[11,R[106],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[111],E,E,24,[[["self"]],["typeid"]]],[11,R[105],E,E,24,[[],[R[1]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[108],E,E,25,[[["self"]],[T]]],[11,R[103],E,E,25,[[[T],["self"]]]],[11,R[104],E,E,25,[[[U]],[R[1]]]],[11,R[105],E,E,25,[[],[R[1]]]],[11,R[106],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[111],E,E,25,[[["self"]],["typeid"]]],[11,R[105],E,E,25,[[],[R[1]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[108],E,E,26,[[["self"]],[T]]],[11,R[103],E,E,26,[[[T],["self"]]]],[11,R[104],E,E,26,[[[U]],[R[1]]]],[11,R[105],E,E,26,[[],[R[1]]]],[11,R[106],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[111],E,E,26,[[["self"]],["typeid"]]],[11,R[105],E,E,26,[[],[R[1]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[108],E,E,27,[[["self"]],[T]]],[11,R[103],E,E,27,[[[T],["self"]]]],[11,R[104],E,E,27,[[[U]],[R[1]]]],[11,R[105],E,E,27,[[],[R[1]]]],[11,R[106],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[111],E,E,27,[[["self"]],["typeid"]]],[11,R[105],E,E,27,[[],[R[1]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[108],E,E,28,[[["self"]],[T]]],[11,R[103],E,E,28,[[[T],["self"]]]],[11,R[104],E,E,28,[[[U]],[R[1]]]],[11,R[105],E,E,28,[[],[R[1]]]],[11,R[106],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[111],E,E,28,[[["self"]],["typeid"]]],[11,R[105],E,E,28,[[],[R[1]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[108],E,E,29,[[["self"]],[T]]],[11,R[103],E,E,29,[[[T],["self"]]]],[11,R[104],E,E,29,[[[U]],[R[1]]]],[11,R[105],E,E,29,[[],[R[1]]]],[11,R[106],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[111],E,E,29,[[["self"]],["typeid"]]],[11,R[105],E,E,29,[[],[R[1]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[108],E,E,30,[[["self"]],[T]]],[11,R[103],E,E,30,[[[T],["self"]]]],[11,R[104],E,E,30,[[[U]],[R[1]]]],[11,R[105],E,E,30,[[],[R[1]]]],[11,R[106],E,E,30,[[["self"]],[T]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[111],E,E,30,[[["self"]],["typeid"]]],[11,R[105],E,E,30,[[],[R[1]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[108],E,E,31,[[["self"]],[T]]],[11,R[103],E,E,31,[[[T],["self"]]]],[11,R[104],E,E,31,[[[U]],[R[1]]]],[11,R[105],E,E,31,[[],[R[1]]]],[11,R[106],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[111],E,E,31,[[["self"]],["typeid"]]],[11,R[114],E,E,31,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,31,[[],[R[1]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[108],E,E,32,[[["self"]],[T]]],[11,R[103],E,E,32,[[[T],["self"]]]],[11,R[104],E,E,32,[[[U]],[R[1]]]],[11,R[105],E,E,32,[[],[R[1]]]],[11,R[106],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[111],E,E,32,[[["self"]],["typeid"]]],[11,R[105],E,E,32,[[],[R[1]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[108],E,E,33,[[["self"]],[T]]],[11,R[103],E,E,33,[[[T],["self"]]]],[11,R[104],E,E,33,[[[U]],[R[1]]]],[11,R[105],E,E,33,[[],[R[1]]]],[11,R[106],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[111],E,E,33,[[["self"]],["typeid"]]],[11,R[105],E,E,33,[[],[R[1]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[108],E,E,34,[[["self"]],[T]]],[11,R[103],E,E,34,[[[T],["self"]]]],[11,R[104],E,E,34,[[[U]],[R[1]]]],[11,R[105],E,E,34,[[],[R[1]]]],[11,R[106],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[111],E,E,34,[[["self"]],["typeid"]]],[11,R[105],E,E,34,[[],[R[1]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[108],E,E,35,[[["self"]],[T]]],[11,R[103],E,E,35,[[[T],["self"]]]],[11,R[104],E,E,35,[[[U]],[R[1]]]],[11,R[105],E,E,35,[[],[R[1]]]],[11,R[106],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[111],E,E,35,[[["self"]],["typeid"]]],[11,R[105],E,E,35,[[],[R[1]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[108],E,E,36,[[["self"]],[T]]],[11,R[103],E,E,36,[[[T],["self"]]]],[11,R[104],E,E,36,[[[U]],[R[1]]]],[11,R[105],E,E,36,[[],[R[1]]]],[11,R[106],E,E,36,[[["self"]],[T]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[111],E,E,36,[[["self"]],["typeid"]]],[11,R[105],E,E,36,[[],[R[1]]]],[11,R[107],E,E,37,[[["self"]],[R[84]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[108],E,E,37,[[["self"]],[T]]],[11,R[103],E,E,37,[[[T],["self"]]]],[11,R[104],E,E,37,[[[U]],[R[1]]]],[11,R[105],E,E,37,[[],[R[1]]]],[11,R[106],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[111],E,E,37,[[["self"]],["typeid"]]],[11,R[105],E,E,37,[[],[R[1]]]],[11,"from","sentry",E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[104],E,E,39,[[[U]],[R[1]]]],[11,R[105],E,E,39,[[],[R[1]]]],[11,R[106],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[111],E,E,39,[[["self"]],["typeid"]]],[11,R[105],E,E,39,[[],[R[1]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[108],E,E,40,[[["self"]],[T]]],[11,R[103],E,E,40,[[[T],["self"]]]],[11,R[104],E,E,40,[[[U]],[R[1]]]],[11,R[105],E,E,40,[[],[R[1]]]],[11,R[106],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[111],E,E,40,[[["self"]],["typeid"]]],[11,R[105],E,E,40,[[],[R[1]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[108],E,E,45,[[["self"]],[T]]],[11,R[103],E,E,45,[[[T],["self"]]]],[11,R[104],E,E,45,[[[U]],[R[1]]]],[11,R[105],E,E,45,[[],[R[1]]]],[11,R[106],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[111],E,E,45,[[["self"]],["typeid"]]],[11,R[105],E,E,45,[[],[R[1]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[108],E,E,38,[[["self"]],[T]]],[11,R[103],E,E,38,[[[T],["self"]]]],[11,R[104],E,E,38,[[[U]],[R[1]]]],[11,R[105],E,E,38,[[],[R[1]]]],[11,R[106],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[111],E,E,38,[[["self"]],["typeid"]]],[11,R[105],E,E,38,[[],[R[1]]]],[11,"from",R[113],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[104],E,E,73,[[[U]],[R[1]]]],[11,R[105],E,E,73,[[],[R[1]]]],[11,R[106],E,E,73,[[["self"]],[T]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[111],E,E,73,[[["self"]],["typeid"]]],[11,R[105],E,E,73,[[],[R[1]]]],[11,"from",R[115],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[104],E,E,43,[[[U]],[R[1]]]],[11,R[105],E,E,43,[[],[R[1]]]],[11,R[106],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[111],E,E,43,[[["self"]],["typeid"]]],[11,R[105],E,E,43,[[],[R[1]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[104],E,E,44,[[[U]],[R[1]]]],[11,R[105],E,E,44,[[],[R[1]]]],[11,R[106],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[111],E,E,44,[[["self"]],["typeid"]]],[11,R[105],E,E,44,[[],[R[1]]]],[11,"from",R[113],E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[104],E,E,74,[[[U]],[R[1]]]],[11,R[105],E,E,74,[[],[R[1]]]],[11,R[106],E,E,74,[[["self"]],[T]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[111],E,E,74,[[["self"]],["typeid"]]],[11,R[105],E,E,74,[[],[R[1]]]],[11,"from",R[116],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[108],E,E,75,[[["self"]],[T]]],[11,R[103],E,E,75,[[[T],["self"]]]],[11,R[104],E,E,75,[[[U]],[R[1]]]],[11,R[105],E,E,75,[[],[R[1]]]],[11,R[106],E,E,75,[[["self"]],[T]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[111],E,E,75,[[["self"]],["typeid"]]],[11,R[105],E,E,75,[[],[R[1]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[104],E,E,76,[[[U]],[R[1]]]],[11,R[105],E,E,76,[[],[R[1]]]],[11,R[106],E,E,76,[[["self"]],[T]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[111],E,E,76,[[["self"]],["typeid"]]],[11,R[105],E,E,76,[[],[R[1]]]],[11,R[107],R[113],E,77,[[["self"]],[R[84]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[108],E,E,77,[[["self"]],[T]]],[11,R[103],E,E,77,[[[T],["self"]]]],[11,R[104],E,E,77,[[[U]],[R[1]]]],[11,R[105],E,E,77,[[],[R[1]]]],[11,R[106],E,E,77,[[["self"]],[T]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[111],E,E,77,[[["self"]],["typeid"]]],[11,R[104],E,E,77,[[["str"]],[R[1]]]],[11,R[105],E,E,77,[[],[R[1]]]],[11,R[107],E,E,78,[[["self"]],[R[84]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[108],E,E,78,[[["self"]],[T]]],[11,R[103],E,E,78,[[[T],["self"]]]],[11,R[104],E,E,78,[[[U]],[R[1]]]],[11,R[105],E,E,78,[[],[R[1]]]],[11,R[106],E,E,78,[[["self"]],[T]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[111],E,E,78,[[["self"]],["typeid"]]],[11,"as_fail",E,E,78,[[["self"]],["fail"]]],[11,R[114],E,E,78,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,78,[[],[R[1]]]],[11,R[107],E,E,79,[[["self"]],[R[84]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[108],E,E,79,[[["self"]],[T]]],[11,R[103],E,E,79,[[[T],["self"]]]],[11,R[104],E,E,79,[[[U]],[R[1]]]],[11,R[105],E,E,79,[[],[R[1]]]],[11,R[106],E,E,79,[[["self"]],[T]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[111],E,E,79,[[["self"]],["typeid"]]],[11,R[114],E,E,79,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,79,[[["str"]],[R[1]]]],[11,R[105],E,E,79,[[],[R[1]]]],[11,"round_subsecs",E,E,79,[[["u16"]],[T]]],[11,"trunc_subsecs",E,E,79,[[["u16"]],[T]]],[11,R[107],E,E,80,[[["self"]],[R[84]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[108],E,E,80,[[["self"]],[T]]],[11,R[103],E,E,80,[[[T],["self"]]]],[11,R[104],E,E,80,[[[U]],[R[1]]]],[11,R[105],E,E,80,[[],[R[1]]]],[11,R[106],E,E,80,[[["self"]],[T]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[111],E,E,80,[[["self"]],["typeid"]]],[11,R[114],E,E,80,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,80,[[["str"]],[R[1]]]],[11,R[105],E,E,80,[[],[R[1]]]],[11,R[107],E,E,46,[[["self"]],[R[84]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[104],E,E,46,[[[U]],[R[1]]]],[11,R[105],E,E,46,[[],[R[1]]]],[11,R[106],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[111],E,E,46,[[["self"]],["typeid"]]],[11,"as_fail",E,E,46,[[["self"]],["fail"]]],[11,R[105],E,E,46,[[],[R[1]]]],[11,R[107],E,E,81,[[["self"]],[R[84]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[108],E,E,81,[[["self"]],[T]]],[11,R[103],E,E,81,[[[T],["self"]]]],[11,R[104],E,E,81,[[[U]],[R[1]]]],[11,R[105],E,E,81,[[],[R[1]]]],[11,R[106],E,E,81,[[["self"]],[T]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[111],E,E,81,[[["self"]],["typeid"]]],[11,R[114],E,E,81,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,81,[[["str"]],[R[1]]]],[11,R[105],E,E,81,[[],[R[1]]]],[11,R[107],E,E,47,[[["self"]],[R[84]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[104],E,E,47,[[[U]],[R[1]]]],[11,R[105],E,E,47,[[],[R[1]]]],[11,R[106],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[111],E,E,47,[[["self"]],["typeid"]]],[11,"as_fail",E,E,47,[[["self"]],["fail"]]],[11,R[114],E,E,47,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,47,[[],[R[1]]]],[11,R[107],E,E,48,[[["self"]],[R[84]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[108],E,E,48,[[["self"]],[T]]],[11,R[103],E,E,48,[[[T],["self"]]]],[11,R[104],E,E,48,[[[U]],[R[1]]]],[11,R[105],E,E,48,[[],[R[1]]]],[11,R[106],E,E,48,[[["self"]],[T]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[111],E,E,48,[[["self"]],["typeid"]]],[11,R[114],E,E,48,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,48,[[],[R[1]]]],[11,R[107],E,E,82,[[["self"]],[R[84]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[108],E,E,82,[[["self"]],[T]]],[11,R[103],E,E,82,[[[T],["self"]]]],[11,R[104],E,E,82,[[[U]],[R[1]]]],[11,R[105],E,E,82,[[],[R[1]]]],[11,R[106],E,E,82,[[["self"]],[T]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[111],E,E,82,[[["self"]],["typeid"]]],[11,R[114],E,E,82,[[["self"],["k"]],["bool"]]],[11,R[105],E,E,82,[[],[R[1]]]],[11,R[107],E,E,83,[[["self"]],[R[84]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[108],E,E,83,[[["self"]],[T]]],[11,R[103],E,E,83,[[[T],["self"]]]],[11,R[104],E,E,83,[[[U]],[R[1]]]],[11,R[105],E,E,83,[[],[R[1]]]],[11,R[106],E,E,83,[[["self"]],[T]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[111],E,E,83,[[["self"]],["typeid"]]],[11,R[114],E,E,83,[[["self"],["k"]],["bool"]]],[11,R[104],E,E,83,[[["str"]],[R[1]]]],[11,R[105],E,E,83,[[],[R[1]]]],[11,R[107],E,E,50,[[["self"]],[R[84]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[108],E,E,50,[[["self"]],[T]]],[11,R[103],E,E,50,[[[T],["self"]]]],[11,R[104],E,E,50,[[[U]],[R[1]]]],[11,R[105],E,E,50,[[],[R[1]]]],[11,R[106],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[111],E,E,50,[[["self"]],["typeid"]]],[11,R[105],E,E,50,[[],[R[1]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[108],E,E,51,[[["self"]],[T]]],[11,R[103],E,E,51,[[[T],["self"]]]],[11,R[104],E,E,51,[[[U]],[R[1]]]],[11,R[105],E,E,51,[[],[R[1]]]],[11,R[106],E,E,51,[[["self"]],[T]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[111],E,E,51,[[["self"]],["typeid"]]],[11,R[105],E,E,51,[[],[R[1]]]],[11,R[156],R[109],E,60,[[[T]],[R[118]]]],[11,"next",E,E,65,[[["self"]],[["k"],[R[66]]]]],[11,R[117],E,E,65,[[["self"]]]],[11,"next",E,E,66,[[["self"]],[R[66]]]],[11,R[117],E,E,66,[[["self"]]]],[11,"next",E,E,64,[[["self"]],[R[66]]]],[11,R[117],E,E,64,[[["self"]]]],[11,"next",E,E,67,[[["self"]],[[R[66]],["v"]]]],[11,R[117],E,E,67,[[["self"]]]],[11,"next",E,E,68,[[["self"]],[R[66]]]],[11,R[117],E,E,68,[[["self"]]]],[11,"next",E,E,58,[[["self"]],[R[66]]]],[11,"next",E,E,62,[[["self"]],[[R[66]],["v"]]]],[11,R[117],E,E,62,[[["self"]]]],[11,"next",E,E,63,[[["self"]],[R[66]]]],[11,R[157],E,E,60,[[[R[118]],["self"]],[[R[66],[R[119]]],[R[119]]]]],[11,"drop",E,E,60,[[["self"]]]],[11,"drop",E,E,64,[[["self"]]]],[11,"index",E,"Returns a reference to the value corresponding to the…",60,[[["self"],["q"]],["v"]]],[11,"eq",E,E,60,[[[R[118]],["self"]],["bool"]]],[11,"cmp",E,E,60,[[[R[118]],["self"]],[R[119]]]],[11,R[183],E,"Creates an empty `BTreeMap<K, V>`.",60,[[],[R[118]]]],[11,"hash",E,E,60,[[["self"],["h"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,"fmt",E,E,1,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,59,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,65,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,58,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,66,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,68,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,62,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,60,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,64,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,63,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,67,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,61,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"clone",E,E,60,[[["self"]],[R[118]]]],[11,"clone",E,E,63,[[["self"]],["range"]]],[11,"clone",E,E,62,[[["self"]],["values"]]],[11,"clone",E,E,68,[[["self"]],["iter"]]],[11,"clone",E,E,65,[[["self"]],["keys"]]],[11,R[110],E,E,60,[[],["intoiter"]]],[11,"extend",E,E,60,[[["self"],[T]]]],[11,"extend",E,E,60,[[["self"],["i"]]]],[11,R[121],E,E,66,[[["self"]],[R[66]]]],[11,R[121],E,E,64,[[["self"]],[R[66]]]],[11,R[121],E,E,68,[[["self"]],[R[66]]]],[11,R[121],E,E,67,[[["self"]],[[R[66]],["v"]]]],[11,R[121],E,E,58,[[["self"]],[R[66]]]],[11,R[121],E,E,62,[[["self"]],[[R[66]],["v"]]]],[11,R[121],E,E,63,[[["self"]],[R[66]]]],[11,R[121],E,E,65,[[["self"]],[["k"],[R[66]]]]],[11,R[124],E,E,60,[[["self"],["s"]],[R[1]]]],[11,"into_deserializer",E,E,60,[[]]],[11,R[122],E,E,60,[[["d"]],[[R[118]],[R[1],[R[118]]]]]],[11,"fmt",R[102],E,0,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,57,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,56,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"from",E,E,57,[[["u32"]],["number"]]],[11,"from",E,E,0,[[["usize"]],[R[0]]]],[11,"from",E,"Convert a slice to `Value`",0,[[],[R[0]]]],[11,"from",E,E,57,[[["i16"]],["number"]]],[11,"from",E,E,57,[[["usize"]],["number"]]],[11,"from",E,"Convert string slice to `Value`",0,[[["str"]],[R[0]]]],[11,"from",E,E,57,[[["u64"]],["number"]]],[11,"from",E,E,0,[[["u32"]],[R[0]]]],[11,"from",E,"Convert `String` to `Value`",0,[[[R[84]]],[R[0]]]],[11,"from",E,E,57,[[["i64"]],["number"]]],[11,"from",E,E,0,[[["u16"]],[R[0]]]],[11,"from",E,E,57,[[["isize"]],["number"]]],[11,"from",E,"Convert a `Vec` to `Value`",0,[[["vec"]],[R[0]]]],[11,"from",E,E,57,[[["u8"]],["number"]]],[11,"from",E,E,0,[[["i64"]],[R[0]]]],[11,"from",E,E,0,[[["u8"]],[R[0]]]],[11,"from",E,E,0,[[["isize"]],[R[0]]]],[11,"from",E,E,57,[[["i8"]],["number"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",0,[[["f64"]],[R[0]]]],[11,"from",E,"Convert map (with string keys) to `Value`",0,[[["map",[R[84],R[0]]],[R[84]],[R[0]]],[R[0]]]],[11,"from",E,E,0,[[["i8"]],[R[0]]]],[11,"from",E,E,0,[[["u64"]],[R[0]]]],[11,"from",E,E,57,[[["parsernumber"]],["number"]]],[11,"from",E,E,0,[[["i16"]],[R[0]]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",0,[[["f32"]],[R[0]]]],[11,"from",E,E,57,[[["u16"]],["number"]]],[11,"from",E,E,0,[[["i32"]],[R[0]]]],[11,"from",E,"Convert boolean to `Value`",0,[[["bool"]],[R[0]]]],[11,"from",E,E,57,[[["i32"]],["number"]]],[11,"from",E,"Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],[R[0]]]],[11,R[122],E,E,57,[[["d"]],[[R[1],["number"]],["number"]]]],[11,R[122],E,E,56,[[["d"]],[["map",[R[84],R[0]]],[R[1],["map"]]]]],[11,R[122],E,E,0,[[["d"]],[[R[1],[R[0]]],[R[0]]]]],[11,R[123],E,"Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],[R[0]]]],[11,R[123],E,E,56,[[["self"],["q"]],[R[0]]]],[11,R[124],E,E,56,[[["self"],["s"]],[R[1]]]],[11,R[124],E,E,0,[[["self"],["s"]],[R[1]]]],[11,R[124],E,E,57,[[["self"],["s"]],[R[1]]]],[11,R[183],E,E,56,[[],[["map",[R[84],R[0]]],[R[84]],[R[0]]]]],[11,R[183],E,E,0,[[],[R[0]]]],[11,"extend",E,E,56,[[["self"],[T]]]],[11,R[110],E,E,56,[[]]],[11,"index",E,E,56,[[["self"],["q"]],[R[0]]]],[11,"index",E,"Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],[R[0]]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["u8"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,56,[[["self"],["map"]],["bool"]]],[11,"eq",E,E,0,[[["bool"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["isize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i8"]],["bool"]]],[11,"eq",E,E,57,[[["number"],["self"]],["bool"]]],[11,"ne",E,E,57,[[["number"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i64"]],["bool"]]],[11,"eq",E,E,0,[[["i32"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[84]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i16"]],["bool"]]],[11,"fmt",E,E,57,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,"Display a JSON value as a string.",0,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[158],E,E,57,[[["str"]],[[R[1],["number"]],["number"]]]],[11,R[158],E,E,0,[[["str"]],[[R[1],[R[0],R[2]]],[R[2]],[R[0]]]]],[11,R[156],E,E,56,[[[T]],[["map",[R[84],R[0]]],[R[84]],[R[0]]]]],[11,R[156],E,"Convert an iteratable type to a `Value`",0,[[["i"]],[R[0]]]],[11,R[125],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[126],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[127],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[128],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[129],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[130],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[131],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[132],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[133],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[134],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[135],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[136],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[137],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[138],E,E,0,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[139],E,E,0,[[["v"],["str"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[140],E,E,0,[[["v"],["str"]],[R[1]]]],[11,R[141],E,E,0,[[["v"]],[R[1]]]],[11,R[142],E,E,0,[[["v"]],[R[1]]]],[11,R[143],E,E,0,[[["v"]],[R[1]]]],[11,R[144],E,E,0,[[["v"]],[R[1]]]],[11,R[145],E,E,0,[[["v"]],[R[1]]]],[11,R[146],E,E,0,[[["v"]],[R[1]]]],[11,R[147],E,E,0,[[["v"]],[R[1]]]],[11,R[148],E,E,0,[[["v"],["str"]],[R[1]]]],[11,R[149],E,E,0,[[["v"]],[R[1]]]],[11,R[150],E,E,0,[[["usize"],["v"]],[R[1]]]],[11,R[151],E,E,0,[[["v"],["usize"],["str"]],[R[1]]]],[11,R[152],E,E,0,[[["v"]],[R[1]]]],[11,R[153],E,E,0,[[["v"],["str"]],[R[1]]]],[11,R[154],E,E,0,[[["v"]],[R[1]]]],[11,R[155],E,E,0,[[["v"]],[R[1]]]],[11,R[125],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[126],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[127],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[128],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[129],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[130],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[131],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[132],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[133],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[134],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[135],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[136],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[137],E,E,57,[[["v"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[141],E,E,57,[[["v"]],[R[1]]]],[11,R[142],E,E,57,[[["v"]],[R[1]]]],[11,R[143],E,E,57,[[["v"]],[R[1]]]],[11,R[144],E,E,57,[[["v"]],[R[1]]]],[11,R[145],E,E,57,[[["v"]],[R[1]]]],[11,R[146],E,E,57,[[["v"]],[R[1]]]],[11,R[138],E,E,57,[[["v"]],[R[1]]]],[11,R[147],E,E,57,[[["v"]],[R[1]]]],[11,R[148],E,E,57,[[["v"],["str"]],[R[1]]]],[11,R[140],E,E,57,[[["v"],["str"]],[R[1]]]],[11,R[149],E,E,57,[[["v"]],[R[1]]]],[11,R[150],E,E,57,[[["usize"],["v"]],[R[1]]]],[11,R[151],E,E,57,[[["v"],["usize"],["str"]],[R[1]]]],[11,R[152],E,E,57,[[["v"]],[R[1]]]],[11,R[153],E,E,57,[[["v"],["str"]],[R[1]]]],[11,R[139],E,E,57,[[["v"],["str"]],[R[1]]]],[11,R[154],E,E,57,[[["v"]],[R[1]]]],[11,R[155],E,E,57,[[["v"]],[R[1]]]],[11,"clone",E,E,56,[[["self"]],[["map",[R[84],R[0]]],[R[84]],[R[0]]]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,57,[[["self"]],["number"]]],[11,"cmp",R[113],E,83,[[["uuid"],["self"]],[R[119]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"fmt",E,E,83,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,51,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,50,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[122],E,E,83,[[["d"]],[["uuid"],[R[1],["uuid"]]]]],[11,R[124],E,E,83,[[["self"],["s"]],[R[1]]]],[11,"eq",E,E,51,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["variant"]],["bool"]]],[11,"eq",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,"ne",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,R[157],E,E,83,[[["uuid"],["self"]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,"le",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,"gt",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,"ge",E,E,83,[[["uuid"],["self"]],["bool"]]],[11,"fmt",E,E,83,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,83,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,50,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[183],E,E,83,[[],["uuid"]]],[11,R[158],E,E,83,[[["str"]],[[R[1],["uuid"]],["uuid"]]]],[11,"fmt",E,E,83,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"clone",E,E,83,[[["self"]],["uuid"]]],[11,"clone",E,E,50,[[["self"]],["variant"]]],[11,"clone",E,E,51,[[["self"]],[R[33]]]],[11,"as_mut",R[5],E,2,[[["self"]],["vec"]]],[11,"cmp",E,E,9,[[["regval"],["self"]],[R[119]]]],[11,"cmp",R[113],E,81,[[["self"],[R[159]]],[R[119]]]],[11,"cmp",R[5],E,8,[[["self"],["addr"]],[R[119]]]],[11,"cmp",R[113],E,47,[[["self"],[R[170]]],[R[119]]]],[11,"cmp",R[5],E,7,[[["self"],[R[160]]],[R[119]]]],[11,"cmp",E,E,19,[[["self"],[R[162]]],[R[119]]]],[11,"cmp",R[113],E,48,[[["self"],["scheme"]],[R[119]]]],[11,"cmp","sentry",E,17,[[["level"],["self"]],[R[119]]]],[11,"extend",R[5],E,2,[[["self"],["i"]]]],[11,"fmt",R[113],E,80,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,31,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,3,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,37,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt","sentry",E,17,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,12,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,77,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,21,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,32,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,26,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,7,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,11,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,4,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,28,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,46,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,2,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt","sentry",E,18,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,29,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,8,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt","sentry",E,20,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,72,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,81,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,25,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,24,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,48,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,36,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,14,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,10,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,47,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,6,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,30,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,22,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,27,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,16,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,34,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,33,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,19,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,15,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,9,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,35,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,5,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,23,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,13,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"deref",E,E,2,[[["self"]]]],[11,R[110],E,E,2,[[]]],[11,"from",E,E,30,[[[R[171]]],[R[85]]]],[11,"from",E,E,30,[[[R[179]]],[R[85]]]],[11,"from",E,E,13,[[],[R[161]]]],[11,"from",E,E,8,[[],["addr"]]],[11,"from",E,E,23,[[[R[167]]],[R[86]]]],[11,"from",E,E,7,[[["u32"]],[R[160]]]],[11,"from",R[113],E,81,[[["u8"]],[R[159]]]],[11,"from",R[5],E,8,[[["u32"]],["addr"]]],[11,"from",R[113],E,81,[[["i64"]],[R[159]]]],[11,"from",R[5],E,19,[[["ipaddr"]],[R[162]]]],[11,"from",E,E,7,[[["i64"]],[R[160]]]],[11,"from",E,E,11,[[["i32"]],["cerror"]]],[11,"from",E,E,23,[[[R[178]]],[R[86]]]],[11,"from",E,E,8,[[],["addr"]]],[11,"from",R[113],E,81,[[["usize"]],[R[159]]]],[11,"from",E,E,81,[[["u32"]],[R[159]]]],[11,"from",R[5],E,7,[[[R[84]]],[R[160]]]],[11,"from",E,E,9,[[["u64"]],["regval"]]],[11,"from",E,E,9,[[["u32"]],["regval"]]],[11,"from",E,E,7,[[["str"]],[R[160]]]],[11,"from",R[113],E,81,[[["i16"]],[R[159]]]],[11,"from",R[5],E,13,[[["i32"]],[R[161]]]],[11,"from",E,E,9,[[],["regval"]]],[11,"from",E,E,7,[[["u16"]],[R[160]]]],[11,"from",E,E,30,[[[R[168]]],[R[85]]]],[11,"from",R[113],E,81,[[["u16"]],[R[159]]]],[11,"from",E,E,81,[[["u64"]],[R[159]]]],[11,"from",R[5],E,2,[[["vec"]],["values"]]],[11,"from",E,E,8,[[["u64"]],["addr"]]],[11,"from",E,E,8,[[["usize"]],["addr"]]],[11,"from",E,E,30,[[[R[176]]],[R[85]]]],[11,"from",E,E,9,[[],["regval"]]],[11,"from",E,E,7,[[["i32"]],[R[160]]]],[11,"from",R[113],E,81,[[["i32"]],[R[159]]]],[11,"from",R[5],E,23,[[[R[172]]],[R[86]]]],[11,"from",E,E,9,[[["i32"]],["regval"]]],[11,"from",R[113],E,81,[[["i8"]],[R[159]]]],[11,"from",R[5],E,9,[[["usize"]],["regval"]]],[11,"from",E,E,8,[[["i32"]],["addr"]]],[11,"from",E,E,30,[[[R[180]]],[R[85]]]],[11,"eq",E,E,30,[[["self"],[R[85]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[85]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["ipaddr"]],["bool"]]],[11,"eq","sentry",E,18,[[["self"],[R[175]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[175]]],["bool"]]],[11,"eq",R[5],E,19,[[["self"],[R[162]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[162]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[179]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[179]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[181]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[181]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[178]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[178]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[36]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[36]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[169]]],["bool"]]],[11,"eq",R[113],E,48,[[["self"],["scheme"]],["bool"]]],[11,"eq","sentry",E,20,[[["self"],["user"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["user"]],["bool"]]],[11,"eq",R[5],E,5,[[["self"],[R[182]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[182]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["values"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["values"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[172]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[171]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[171]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[176]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[176]]],["bool"]]],[11,"eq",E,E,9,[[["regval"],["self"]],["bool"]]],[11,"ne",E,E,9,[[["regval"],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[161]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[161]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["addr"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["addr"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[22]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[22]]],["bool"]]],[11,"eq",E,E,11,[[["cerror"],["self"]],["bool"]]],[11,"ne",E,E,11,[[["cerror"],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[177]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[177]]],["bool"]]],[11,"eq",R[113],E,80,[[["self"],["dsn"]],["bool"]]],[11,"ne",E,E,80,[[["self"],["dsn"]],["bool"]]],[11,"eq",R[5],E,4,[[["frame"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["frame"],["self"]],["bool"]]],[11,"eq",R[113],E,81,[[["self"],[R[159]]],["bool"]]],[11,"ne",E,E,81,[[["self"],[R[159]]],["bool"]]],[11,"eq",R[5],E,21,[[[R[184]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[184]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["thread"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["thread"]],["bool"]]],[11,"eq",E,E,22,[[[R[165]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[165]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[163]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[163]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[174]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[174]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[164]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[164]]],["bool"]]],[11,"eq",E,E,37,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["event"]],["bool"]]],[11,"eq","sentry",E,17,[[["level"],["self"]],["bool"]]],[11,"eq",R[113],E,47,[[["self"],[R[170]]],["bool"]]],[11,"eq",R[5],E,23,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[86]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[167]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[167]]],["bool"]]],[11,"eq",E,E,31,[[[R[173]],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[166]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[166]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[180]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[180]]],["bool"]]],[11,"eq",E,E,33,[[[R[168]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[168]],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"hash",R[113],E,80,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",R[5],E,31,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",R[113],E,81,[[["self"],["__h"]]]],[11,"hash",R[5],E,8,[[["self"],["__h"]]]],[11,"hash","sentry",E,17,[[["self"],["__h"]]]],[11,"hash",R[5],E,7,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,R[157],R[113],E,48,[[["self"],["scheme"]],[[R[66],[R[119]]],[R[119]]]]],[11,R[157],"sentry",E,17,[[["level"],["self"]],[[R[66],[R[119]]],[R[119]]]]],[11,R[157],R[113],E,47,[[["self"],[R[170]]],[[R[66],[R[119]]],[R[119]]]]],[11,R[157],R[5],E,19,[[["self"],["ipaddr"]],[[R[66],[R[119]]],[R[119]]]]],[11,R[157],R[113],E,81,[[["self"],[R[159]]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,81,[[["self"],[R[159]]],["bool"]]],[11,"le",E,E,81,[[["self"],[R[159]]],["bool"]]],[11,"gt",E,E,81,[[["self"],[R[159]]],["bool"]]],[11,"ge",E,E,81,[[["self"],[R[159]]],["bool"]]],[11,R[157],R[5],E,19,[[["self"],[R[162]]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,19,[[["self"],[R[162]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[162]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[162]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[162]]],["bool"]]],[11,R[157],E,E,9,[[["regval"],["self"]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,9,[[["regval"],["self"]],["bool"]]],[11,"le",E,E,9,[[["regval"],["self"]],["bool"]]],[11,"gt",E,E,9,[[["regval"],["self"]],["bool"]]],[11,"ge",E,E,9,[[["regval"],["self"]],["bool"]]],[11,R[157],E,E,8,[[["self"],["addr"]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,8,[[["self"],["addr"]],["bool"]]],[11,"le",E,E,8,[[["self"],["addr"]],["bool"]]],[11,"gt",E,E,8,[[["self"],["addr"]],["bool"]]],[11,"ge",E,E,8,[[["self"],["addr"]],["bool"]]],[11,R[157],E,E,7,[[["self"],[R[160]]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"le",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"gt",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"ge",E,E,7,[[["self"],[R[160]]],["bool"]]],[11,"into",E,E,9,[[],["u64"]]],[11,"into",E,E,13,[[],["i32"]]],[11,"into",E,E,8,[[],["u64"]]],[11,"into",E,E,11,[[],["i32"]]],[11,"name",E,E,72,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"cause",E,E,72,[[["self"]],[[R[66],["fail"]],["fail"]]]],[11,R[74],E,E,72,[[["self"]],[[R[66],[R[74]]],[R[74]]]]],[11,"name",R[113],E,47,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"cause",E,E,47,[[["self"]],[[R[66],["fail"]],["fail"]]]],[11,R[74],E,E,47,[[["self"]],[[R[66],[R[74]]],[R[74]]]]],[11,"name",E,E,46,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"cause",E,E,46,[[["self"]],[[R[66],["fail"]],["fail"]]]],[11,R[74],E,E,46,[[["self"]],[[R[66],[R[74]]],[R[74]]]]],[11,"deref_mut",R[5],E,2,[[["self"]]]],[11,"fmt",E,E,9,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,8,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,48,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,19,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,37,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,80,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,47,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,72,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,81,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,77,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt","sentry",E,17,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,46,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[5],E,7,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[183],E,E,27,[[],[R[166]]]],[11,R[183],E,E,7,[[],[R[160]]]],[11,R[183],E,E,21,[[],[R[184]]]],[11,R[183],E,E,35,[[],[R[180]]]],[11,R[183],E,E,11,[[],["cerror"]]],[11,R[183],"sentry",E,18,[[],[R[175]]]],[11,R[183],R[5],E,19,[[],[R[162]]]],[11,R[183],E,E,8,[[],["addr"]]],[11,R[183],E,E,15,[[],[R[169]]]],[11,R[183],"sentry",E,17,[[],["level"]]],[11,R[183],R[5],E,37,[[],["event"]]],[11,R[183],E,E,12,[[],[R[163]]]],[11,R[183],E,E,5,[[],[R[182]]]],[11,R[183],E,E,13,[[],[R[161]]]],[11,R[183],E,E,9,[[],["regval"]]],[11,R[183],E,E,4,[[],["frame"]]],[11,R[183],E,E,6,[[],[R[22]]]],[11,R[183],E,E,3,[[],[R[181]]]],[11,R[183],E,E,34,[[],[R[179]]]],[11,R[183],E,E,16,[[],[R[36]]]],[11,R[183],E,E,36,[[],[R[176]]]],[11,R[183],E,E,33,[[],[R[168]]]],[11,R[183],"sentry",E,20,[[],["user"]]],[11,R[183],R[5],E,32,[[],[R[171]]]],[11,R[183],E,E,10,[[],["thread"]]],[11,R[183],E,E,14,[[],[R[177]]]],[11,R[183],E,E,2,[[],["values"]]],[11,R[122],R[113],E,81,[[["d"]],[[R[1],[R[159]]],[R[159]]]]],[11,R[122],R[5],E,22,[[["__d"]],[[R[165]],[R[1],[R[165]]]]]],[11,R[122],E,E,36,[[["__d"]],[[R[176]],[R[1],[R[176]]]]]],[11,R[122],E,E,2,[[["__d"]],[["values"],[R[1],["values"]]]]],[11,R[122],E,E,24,[[["__d"]],[[R[178]],[R[1],[R[178]]]]]],[11,R[122],R[113],E,77,[[["__d"]],[["auth"],[R[1],["auth"]]]]],[11,R[122],R[5],E,9,[[["d"]],[["regval"],[R[1],["regval"]]]]],[11,R[122],E,E,27,[[["__d"]],[[R[1],[R[166]]],[R[166]]]]],[11,R[122],"sentry",E,20,[[["__d"]],[["user"],[R[1],["user"]]]]],[11,R[122],R[5],E,31,[[["__d"]],[[R[1],[R[173]]],[R[173]]]]],[11,R[122],"sentry",E,17,[[["d"]],[["level"],[R[1],["level"]]]]],[11,R[122],R[5],E,33,[[["__d"]],[[R[168]],[R[1],[R[168]]]]]],[11,R[122],E,E,19,[[["d"]],[[R[1],[R[162]]],[R[162]]]]],[11,R[122],E,E,5,[[["__d"]],[[R[182]],[R[1],[R[182]]]]]],[11,R[122],E,E,7,[[["__d"]],[[R[1],[R[160]]],[R[160]]]]],[11,R[122],E,E,23,[[["__d"]],[[R[1],[R[86]]],[R[86]]]]],[11,R[122],E,E,4,[[["__d"]],[[R[1],["frame"]],["frame"]]]],[11,R[122],E,E,25,[[["__d"]],[[R[167]],[R[1],[R[167]]]]]],[11,R[122],E,E,11,[[["__d"]],[[R[1],["cerror"]],["cerror"]]]],[11,R[122],E,E,8,[[["d"]],[["addr"],[R[1],["addr"]]]]],[11,R[122],E,E,14,[[["__d"]],[[R[177]],[R[1],[R[177]]]]]],[11,R[122],E,E,16,[[["__d"]],[[R[1],[R[36]]],[R[36]]]]],[11,R[122],E,E,32,[[["__d"]],[[R[1],[R[171]]],[R[171]]]]],[11,R[122],E,E,13,[[["__d"]],[[R[1],[R[161]]],[R[161]]]]],[11,R[122],R[113],E,80,[[["d"]],[[R[1],["dsn"]],["dsn"]]]],[11,R[122],R[5],E,15,[[["__d"]],[[R[169]],[R[1],[R[169]]]]]],[11,R[122],E,E,21,[[["__d"]],[[R[1],[R[184]]],[R[184]]]]],[11,R[122],E,E,37,[[["__d"]],[["event"],[R[1],["event"]]]]],[11,R[122],E,E,35,[[["__d"]],[[R[180]],[R[1],[R[180]]]]]],[11,R[122],E,E,12,[[["__d"]],[[R[1],[R[163]]],[R[163]]]]],[11,R[122],E,E,26,[[["__d"]],[[R[172]],[R[1],[R[172]]]]]],[11,R[122],E,E,6,[[["__d"]],[[R[22]],[R[1],[R[22]]]]]],[11,R[122],E,E,34,[[["__d"]],[[R[179]],[R[1],[R[179]]]]]],[11,R[122],E,E,10,[[["__d"]],[[R[1],["thread"]],["thread"]]]],[11,R[122],"sentry",E,18,[[["__d"]],[[R[1],[R[175]]],[R[175]]]]],[11,R[122],R[5],E,3,[[["__d"]],[[R[1],[R[181]]],[R[181]]]]],[11,R[122],E,E,30,[[["__d"]],[[R[1],[R[85]]],[R[85]]]]],[11,R[122],E,E,29,[[["__d"]],[[R[1],[R[174]]],[R[174]]]]],[11,R[122],E,E,28,[[["__d"]],[[R[164]],[R[1],[R[164]]]]]],[11,R[158],R[113],E,80,[[["str"]],[[R[1],["dsn",R[100]]],["dsn"],[R[100]]]]],[11,R[158],R[5],E,8,[[["str"]],[["addr"],[R[185]],[R[1],["addr",R[185]]]]]],[11,R[158],E,E,9,[[["str"]],[[R[1],["regval",R[185]]],["regval"],[R[185]]]]],[11,R[158],R[113],E,81,[[["str"]],[[R[1],[R[159],R[170]]],[R[170]],[R[159]]]]],[11,R[158],R[5],E,19,[[["str"]],[[R[187]],[R[162]],[R[1],[R[162],R[187]]]]]],[11,R[158],"sentry",E,17,[[["str"]],[[R[1],["level"]],["level"]]]],[11,R[158],R[113],E,77,[[["str"]],[["auth"],[R[1],["auth",R[186]]],[R[186]]]]],[11,R[156],R[5],E,2,[[["i"]],["values"]]],[11,R[124],E,E,36,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,28,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,15,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,4,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,13,[[["self"],["__s"]],[R[1]]]],[11,R[124],R[113],E,80,[[["self"],["s"]],[R[1]]]],[11,R[124],R[5],E,7,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,33,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,16,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,5,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,9,[[["self"],["s"]],[R[1]]]],[11,R[124],E,E,22,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,34,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,8,[[["self"],["s"]],[R[1]]]],[11,R[124],E,E,31,[[["self"],["__s"]],[R[1]]]],[11,R[124],"sentry",E,18,[[["self"],["__s"]],[R[1]]]],[11,R[124],R[5],E,25,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,3,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,32,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,35,[[["self"],["__s"]],[R[1]]]],[11,R[124],"sentry",E,20,[[["self"],["__s"]],[R[1]]]],[11,R[124],R[5],E,19,[[["self"],["s"]],[R[1]]]],[11,R[124],E,E,14,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,30,[[["self"],["__s"]],[R[1]]]],[11,R[124],"sentry",E,17,[[["self"],["s"]],[R[1]]]],[11,R[124],R[113],E,77,[[["self"],["__s"]],[R[1]]]],[11,R[124],R[5],E,12,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,26,[[["self"],["__s"]],[R[1]]]],[11,R[124],R[113],E,81,[[["self"],["s"]],[R[1]]]],[11,R[124],R[5],E,29,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,24,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,21,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,23,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,27,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[124],E,E,37,[[["self"],["__s"]],[R[1]]]],[11,"clone",E,E,10,[[["self"]],["thread"]]],[11,"clone",E,E,32,[[["self"]],[R[171]]]],[11,"clone","sentry",E,18,[[["self"]],[R[175]]]],[11,"clone",R[5],E,25,[[["self"]],[R[167]]]],[11,"clone","sentry",E,17,[[["self"]],["level"]]],[11,"clone",R[113],E,80,[[["self"]],["dsn"]]],[11,"clone",R[5],E,36,[[["self"]],[R[176]]]],[11,"clone",E,E,12,[[["self"]],[R[163]]]],[11,"clone",E,E,24,[[["self"]],[R[178]]]],[11,"clone",E,E,26,[[["self"]],[R[172]]]],[11,"clone",E,E,37,[[["self"]],["event"]]],[11,"clone",E,E,3,[[["self"]],[R[181]]]],[11,"clone",E,E,19,[[["self"]],[R[162]]]],[11,"clone",E,E,15,[[["self"]],[R[169]]]],[11,"clone",R[113],E,81,[[["self"]],[R[159]]]],[11,"clone",R[5],E,22,[[["self"]],[R[165]]]],[11,"clone",E,E,23,[[["self"]],[R[86]]]],[11,"clone",E,E,13,[[["self"]],[R[161]]]],[11,"clone",E,E,4,[[["self"]],["frame"]]],[11,"clone",R[113],E,77,[[["self"]],["auth"]]],[11,"clone",R[5],E,21,[[["self"]],[R[184]]]],[11,"clone",R[113],E,48,[[["self"]],["scheme"]]],[11,"clone",R[5],E,6,[[["self"]],[R[22]]]],[11,"clone","sentry",E,20,[[["self"]],["user"]]],[11,"clone",R[5],E,34,[[["self"]],[R[179]]]],[11,"clone",E,E,35,[[["self"]],[R[180]]]],[11,"clone",E,E,9,[[["self"]],["regval"]]],[11,"clone",E,E,27,[[["self"]],[R[166]]]],[11,"clone",E,E,8,[[["self"]],["addr"]]],[11,"clone",E,E,14,[[["self"]],[R[177]]]],[11,"clone",E,E,11,[[["self"]],["cerror"]]],[11,"clone",E,E,33,[[["self"]],[R[168]]]],[11,"clone",E,E,2,[[["self"]],["values"]]],[11,"clone",E,E,29,[[["self"]],[R[174]]]],[11,"clone",E,E,28,[[["self"]],[R[164]]]],[11,"clone",E,E,30,[[["self"]],[R[85]]]],[11,"clone",E,E,7,[[["self"]],[R[160]]]],[11,"clone",E,E,5,[[["self"]],[R[182]]]],[11,"clone",E,E,31,[[["self"]],[R[173]]]],[11,"clone",E,E,16,[[["self"]],[R[36]]]],[11,"cmp",R[113],E,79,[[["self"],[R[95]]],[R[119]]]],[11,"hash",E,E,79,[[["self"],["h"]]]],[11,"fmt",E,E,79,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,82,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,78,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"from",E,E,79,[[[R[190]]],[[R[95],["utc"]],["utc"]]]],[11,"from",E,R[191],79,[[[R[95],["local"]],["local"]],[[R[188]],[R[95],[R[188]]]]]],[11,"from",E,R[192],79,[[[R[95],["utc"]],["utc"]],[[R[188]],[R[95],[R[188]]]]]],[11,"from",E,R[189],79,[[[R[188]],[R[95],[R[188]]]],[[R[95],["utc"]],["utc"]]]],[11,"from",E,R[191],79,[[[R[95],["local"]],["local"]],[[R[95],["utc"]],["utc"]]]],[11,"from",E,R[192],79,[[[R[95],["utc"]],["utc"]],[[R[95],["local"]],["local"]]]],[11,"from",E,R[189],79,[[[R[188]],[R[95],[R[188]]]],[[R[95],["local"]],["local"]]]],[11,"from",E,E,79,[[[R[190]]],[[R[95],["local"]],["local"]]]],[11,"hour",E,E,79,[[["self"]],["u32"]]],[11,"minute",E,E,79,[[["self"]],["u32"]]],[11,"second",E,E,79,[[["self"]],["u32"]]],[11,"nanosecond",E,E,79,[[["self"]],["u32"]]],[11,"with_hour",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_minute",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_second",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_nanosecond",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,R[124],E,"Serialize into a rfc3339 time string",79,[[["self"],["s"]],[R[1]]]],[11,"fix",E,E,82,[[["self"]],[R[188]]]],[11,"eq",E,E,82,[[["self"],["utc"]],["bool"]]],[11,"eq",E,E,79,[[[R[95]],["self"]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[97]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[97]]],["bool"]]],[11,R[193],E,E,78,[[["self"]],["str"]]],[11,R[157],E,E,79,[[["self"],[R[95]]],[[R[66],[R[119]]],[R[119]]]]],[11,"add",E,E,79,[[[R[83]]],[R[95]]]],[11,"add",E,E,79,[[[R[188]]],[R[95]]]],[11,"sub",E,E,79,[[[R[83]]],[R[95]]]],[11,"sub",E,E,79,[[[R[188]]],[R[95]]]],[11,"sub",E,E,79,[[[R[95]]],[R[83]]]],[11,R[194],E,E,82,[[["utc"]],["utc"]]],[11,R[195],E,E,82,[[["self"],[R[98]]],[[R[92],["utc"]],["utc"]]]],[11,R[196],E,E,82,[[["self"],[R[99]]],[[R[92],["utc"]],["utc"]]]],[11,R[197],E,E,82,[[["self"],[R[98]]],["utc"]]],[11,R[198],E,E,82,[[["self"],[R[99]]],["utc"]]],[11,"fmt",E,E,82,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,79,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,78,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[122],E,E,79,[[["d"]],[[R[95],[R[188]]],[R[1],[R[95]]]]]],[11,R[122],E,E,79,[[["d"]],[[R[95],["local"]],[R[1],[R[95]]]]]],[11,R[122],E,E,79,[[["d"]],[[R[1],[R[95]]],[R[95],["utc"]]]]],[11,R[158],E,E,79,[[["str"]],[[R[97]],[R[95],["local"]],[R[1],[R[95],R[97]]]]]],[11,R[158],E,E,79,[[["str"]],[[R[1],[R[95],R[97]]],[R[95],["utc"]],[R[97]]]]],[11,R[158],E,E,79,[[["str"]],[[R[97]],[R[1],[R[95],R[97]]],[R[95],[R[188]]]]]],[11,"year",E,E,79,[[["self"]],["i32"]]],[11,"month",E,E,79,[[["self"]],["u32"]]],[11,"month0",E,E,79,[[["self"]],["u32"]]],[11,"day",E,E,79,[[["self"]],["u32"]]],[11,"day0",E,E,79,[[["self"]],["u32"]]],[11,"ordinal",E,E,79,[[["self"]],["u32"]]],[11,"ordinal0",E,E,79,[[["self"]],["u32"]]],[11,"weekday",E,E,79,[[["self"]],["weekday"]]],[11,"iso_week",E,E,79,[[["self"]],["isoweek"]]],[11,"with_year",E,E,79,[[["self"],["i32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_month",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_month0",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_day",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_day0",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_ordinal",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"with_ordinal0",E,E,79,[[["self"],["u32"]],[[R[66],[R[95]]],[R[95]]]]],[11,"clone",E,E,82,[[["self"]],["utc"]]],[11,"clone",E,E,78,[[["self"]],[R[97]]]],[11,"clone",E,E,79,[[["self"]],[R[95]]]],[11,"cmp",E,E,70,[[["self"],[R[199]]],[R[119]]]],[11,"fmt",E,E,70,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,71,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[112],E,69,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"hash",R[113],E,70,[[["self"],["__h"]]]],[11,"from",E,E,70,[[],[R[199]]]],[11,"from",E,E,70,[[["uuid"]],[R[199]]]],[11,"eq",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[200]]],["bool"]]],[11,R[193],E,E,71,[[["self"]],["str"]]],[11,R[157],E,E,70,[[["self"],[R[199]]],[[R[66],[R[119]]],[R[119]]]]],[11,"lt",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"le",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"gt",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"ge",E,E,70,[[["self"],[R[199]]],["bool"]]],[11,"fmt",R[112],E,69,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",R[113],E,70,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,71,[[["self"],[R[120]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[124],E,E,70,[[["self"],["s"]],[R[1]]]],[11,R[183],E,E,70,[[],[R[199]]]],[11,R[158],E,E,70,[[["str"]],[[R[1],[R[199],R[200]]],[R[200]],[R[199]]]]],[11,R[122],E,E,70,[[["d"]],[[R[1],[R[199]]],[R[199]]]]],[11,"clone",E,E,71,[[["self"]],[R[200]]]],[11,"clone",E,E,70,[[["self"]],[R[199]]]],[11,R[201],"sentry",E,18,[[]]],[11,R[75],E,E,39,[[["self"],[R[2]]],["uuid"]]],[11,R[77],E,E,39,[[["f"],["self"]],["uuid"]]],[11,"into_dsn",R[113],E,80,[[],[[R[1],[R[66],R[100]]],[R[66],["dsn"]],[R[100]]]]],[11,R[202],R[116],E,76,[[["event"],["self"]]]],[11,R[219],E,E,76,[[["self"],[R[83]]],["bool"]]],[11,R[203],E,E,75,[[["self"],[R[82]]],[["box",[R[101]]],[R[101]]]]],[11,R[183],"sentry",E,40,[[],["scope"]]],[11,R[183],R[113],E,73,[[],[R[204]]]],[11,R[183],R[115],E,43,[[],[R[80]]]],[11,R[183],"sentry",E,38,[[],[R[82]]]],[11,"clone",E,E,40,[[["self"]],["scope"]]],[11,"clone",E,E,45,[[["self"]],[R[65]]]],[11,"clone",E,E,38,[[["self"]],[R[82]]]],[11,"clone",R[116],E,75,[[["self"]],["defaulttransportfactory"]]],[11,"from","sentry",E,45,[[[T]],[R[65]]]],[11,"from",E,E,38,[[],[R[82]]]],[11,"from",E,E,38,[[[T]],[R[82]]]],[11,"drop",R[113],E,73,[[["self"]]]],[11,"drop",E,E,74,[[["self"]]]],[11,"drop",R[116],E,76,[[["self"]]]],[11,"fmt","sentry",E,39,[[["self"],[R[120]]],[R[1]]]],[11,"fmt",E,E,40,[[["self"],[R[120]]],[R[1]]]],[11,"fmt",R[113],E,73,[[["self"],[R[120]]],[R[1]]]],[11,"fmt","sentry",E,45,[[["self"],[R[120]]],[R[1]]]],[11,"fmt",E,E,38,[[["self"],[R[120]]],[R[1]]]],[11,"enabled",R[115],E,44,[[["self"],["metadata"]],["bool"]]],[11,"log",E,E,44,[[["self"],["record"]]]],[11,"flush",E,E,44,[[["self"]]]],[11,"get",R[102],"Index into a JSON array or map. A string index can be used…",0,[[["self"],["i"]],[[R[66],[R[0]]],[R[0]]]]],[11,"get_mut",E,"Mutably index into a JSON array or map. A string index can…",0,[[["self"],["i"]],[[R[66],[R[0]]],[R[0]]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[[R[66],["map"]],["map"]]]],[11,"as_object_mut",E,"If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],[R[66],["map"]]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],[R[66],["vec"]]]]],[11,"as_array_mut",E,"If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["vec"],[R[66],["vec"]]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",0,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],[R[66],["i64"]]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["u64"],[R[66],["u64"]]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],[R[66],["f64"]]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[[R[66],["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],[R[66]]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[[R[0]],[R[66],[R[0]]]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],[[R[0]],[R[66],[R[0]]]]]],[11,"take",E,"Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],[R[0]]]],[11,"new",E,"Makes a new empty Map.",56,[[],[["map",[R[84],R[0]]],[R[84]],[R[0]]]]],[11,"with_capacity",E,"Makes a new empty Map with the given initial capacity.",56,[[["usize"]],[["map",[R[84],R[0]]],[R[84]],[R[0]]]]],[11,"clear",E,R[205],56,[[["self"]]]],[11,"get",E,R[206],56,[[["self"],["q"]],[[R[66],[R[0]]],[R[0]]]]],[11,R[207],E,"Returns true if the map contains a value for the specified…",56,[[["self"],["q"]],["bool"]]],[11,"get_mut",E,R[208],56,[[["self"],["q"]],[[R[66],[R[0]]],[R[0]]]]],[11,"insert",E,R[209],56,[[["self"],[R[84]],[R[0]]],[[R[66],[R[0]]],[R[0]]]]],[11,"remove",E,R[210],56,[[["self"],["q"]],[[R[66],[R[0]]],[R[0]]]]],[11,"entry",E,R[211],56,[[["self"],["s"]],["entry"]]],[11,"len",E,R[214],56,[[["self"]],["usize"]]],[11,R[216],E,"Returns true if the map contains no elements.",56,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",56,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map.",56,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",56,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",56,[[["self"]],["values"]]],[11,R[212],E,"Gets an iterator over mutable values of the map.",56,[[["self"]],[R[213]]]],[11,"is_i64",E,"Returns true if the `Number` is an integer between…",57,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Number` is an integer between zero…",57,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Number` can be represented by f64.",57,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Number` is an integer, represent it as i64 if…",57,[[["self"]],[["i64"],[R[66],["i64"]]]]],[11,"as_u64",E,"If the `Number` is an integer, represent it as u64 if…",57,[[["self"]],[["u64"],[R[66],["u64"]]]]],[11,"as_f64",E,"Represents the number as f64 if possible. Returns None…",57,[[["self"]],[["f64"],[R[66],["f64"]]]]],[11,"from_f64",E,"Converts a finite `f64` to a `Number`. Infinite or NaN…",57,[[["f64"]],[[R[66],["number"]],["number"]]]],[11,"key",R[109],"Gets a reference to the key in the entry.",59,[[["self"]],["k"]]],[11,"remove_entry",E,"Take ownership of the key and value from the map.",59,[[]]],[11,"get",E,"Gets a reference to the value in the entry.",59,[[["self"]],["v"]]],[11,"get_mut",E,"Gets a mutable reference to the value in the entry.",59,[[["self"]],["v"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",59,[[],["v"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",59,[[["self"],["v"]],["v"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",59,[[],["v"]]],[11,"new",E,"Makes a new empty BTreeMap with a reasonable choice for B.",60,[[],[R[118]]]],[11,"clear",E,R[205],60,[[["self"]]]],[11,"get",E,R[206],60,[[["self"],["q"]],[[R[66]],["v"]]]],[11,"get_key_value",E,"Returns the key-value pair corresponding to the supplied…",60,[[["self"],["q"]],[R[66]]]],[11,R[207],E,"Returns `true` if the map contains a value for the…",60,[[["self"],["q"]],["bool"]]],[11,"get_mut",E,R[208],60,[[["self"],["q"]],[["v"],[R[66]]]]],[11,"insert",E,R[209],60,[[["self"],["k"],["v"]],[R[66]]]],[11,"remove",E,R[210],60,[[["self"],["q"]],[R[66]]]],[11,"append",E,"Moves all elements from `other` into `Self`, leaving…",60,[[["self"],[R[118]]]]],[11,"range",E,"Constructs a double-ended iterator over a sub-range of…",60,[[["self"],["r"]],["range"]]],[11,"range_mut",E,"Constructs a mutable double-ended iterator over a…",60,[[["self"],["r"]],["rangemut"]]],[11,"entry",E,R[211],60,[[["self"],["k"]],["entry"]]],[11,"split_off",E,"Splits the collection into two at the given key. Returns…",60,[[["self"],["q"]],[R[118]]]],[11,"iter",E,"Gets an iterator over the entries of the map, sorted by key.",60,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map,…",60,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map, in sorted order.",60,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map, in order by…",60,[[["self"]],["values"]]],[11,R[212],E,"Gets a mutable iterator over the values of the map, in…",60,[[["self"]],[R[213]]]],[11,"len",E,R[214],60,[[["self"]],["usize"]]],[11,R[216],E,"Returns `true` if the map contains no elements.",60,[[["self"]],["bool"]]],[11,"key",E,"Gets a reference to the key that would be used when…",61,[[["self"]],["k"]]],[11,"into_key",E,"Take ownership of the key.",61,[[],["k"]]],[11,"insert",E,"Sets the value of the entry with the `VacantEntry`'s key,…",61,[[["v"]],["v"]]],[11,"or_insert",E,R[215],1,[[["v"]],["v"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",1,[[["f"]],["v"]]],[11,"key",E,"Returns a reference to this entry's key.",1,[[["self"]],["k"]]],[11,"and_modify",E,"Provides in-place mutable access to an occupied entry…",1,[[["f"]],["entry"]]],[11,"or_default",E,R[215],1,[[],["v"]]],[11,"from_uuid",R[113],"Constructs a `DebugId` from its `uuid`.",70,[[["uuid"]],[R[199]]]],[11,"from_parts",E,"Constructs a `DebugId` from its `uuid` and `appendix` parts.",70,[[["u32"],["uuid"]],[R[199]]]],[11,"from_guid_age",E,"Constructs a `DebugId` from a Microsoft little-endian GUID…",70,[[["u32"]],[[R[1],[R[199],R[200]]],[R[200]],[R[199]]]]],[11,"from_breakpad",E,"Parses a breakpad identifier from a string.",70,[[["str"]],[[R[1],[R[199],R[200]]],[R[200]],[R[199]]]]],[11,"uuid",E,"Returns the UUID part of the code module's debug_identifier.",70,[[["self"]],["uuid"]]],[11,"appendix",E,"Returns the appendix part of the code module's debug…",70,[[["self"]],["u32"]]],[11,"breakpad",E,"Returns a wrapper which when formatted via `fmt::Display`…",70,[[["self"]],["breakpadformat"]]],[11,"new",R[5],"Creates an empty values struct.",2,[[],["values"]]],[11,R[216],E,"Checks whether this struct is empty in both values and data.",2,[[["self"]],["bool"]]],[11,"from_frames_reversed",E,"Optionally creates a stacktrace from a list of stack frames.",6,[[["frame"],["vec",["frame"]]],[[R[22]],[R[66],[R[22]]]]]],[11,"is_null",E,"Returns `true` if this address is the null pointer.",8,[[["self"]],["bool"]]],[11,"is_debug","sentry","A quick way to check if the level is `debug`.",17,[[["self"]],["bool"]]],[11,"is_info",E,"A quick way to check if the level is `info`.",17,[[["self"]],["bool"]]],[11,"is_warning",E,"A quick way to check if the level is `warning`.",17,[[["self"]],["bool"]]],[11,"is_error",E,"A quick way to check if the level is `error`.",17,[[["self"]],["bool"]]],[11,"is_fatal",E,"A quick way to check if the level is `fatal`.",17,[[["self"]],["bool"]]],[11,R[217],R[5],"Returns the name of the type on sentry.",23,[[["self"]],["str"]]],[11,R[216],E,"Returns true if the debug meta is empty.",27,[[["self"]],["bool"]]],[11,R[217],E,"Returns the name of the type for sentry.",30,[[["self"]],["str"]]],[11,"new",E,"Creates a new event with the current timestamp and random…",37,[[],["event"]]],[11,"into_owned",E,"Creates a fully owned version of the event.",37,[[],["event"]]],[11,R[218],R[113],"Quick check if the client is enabled.",74,[[["self"]],["bool"]]],[11,R[219],E,R[220],54,[[["self"],[R[83]]],["bool"]]],[11,"new",R[116],"Creates a new transport.",76,[[[R[82]]],["self"]]],[11,"with_client",E,"Creates a new transport that uses the passed HTTP client.",76,[[[R[82]],[R[65]]],["self"]]],[11,"from_pairs",R[113],"Creates an auth header from key value pairs.",77,[[["i"]],[["auth"],[R[1],["auth",R[186]]],[R[186]]]]],[11,"from_querystring",E,"Creates an auth header from a query string.",77,[[],[["auth"],[R[1],["auth",R[186]]],[R[186]]]]],[11,R[35],E,"Returns the unix timestamp the client defined",77,[[["self"]],[[R[66],[R[95]]],[R[95],["utc"]]]]],[11,R[33],E,"Returns the protocol version the client speaks",77,[[["self"]],["u16"]]],[11,R[227],E,"Returns the public key",77,[[["self"]],["str"]]],[11,R[228],E,"Returns the client's secret if it authenticated with a…",77,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"is_public",E,"Returns true if the authentication implies public auth (no…",77,[[["self"]],["bool"]]],[11,"client_agent",E,"Returns the client's agent",77,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"from_utc",E,"Makes a new `DateTime` with given UTC datetime and offset.…",79,[[[R[99]]],[R[95]]]],[11,"date",E,"Retrieves a date component.",79,[[["self"]],["date"]]],[11,"time",E,"Retrieves a time component. Unlike `date`, this is not…",79,[[["self"]],["naivetime"]]],[11,R[35],E,"Returns the number of non-leap seconds since January 1,…",79,[[["self"]],["i64"]]],[11,R[221],E,"Returns the number of non-leap-milliseconds since January…",79,[[["self"]],["i64"]]],[11,R[222],E,"Returns the number of non-leap-nanoseconds since January…",79,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis",E,"Returns the number of milliseconds since the last second…",79,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros",E,"Returns the number of microseconds since the last second…",79,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos",E,"Returns the number of nanoseconds since the last second…",79,[[["self"]],["u32"]]],[11,"offset",E,"Retrieves an associated offset from UTC.",79,[[["self"]]]],[11,"timezone",E,"Retrieves an associated time zone.",79,[[["self"]],["tz"]]],[11,"with_timezone",E,"Changes the associated time zone. This does not change the…",79,[[["self"],["tz2"]],[R[95]]]],[11,"checked_add_signed",E,"Adds given `Duration` to the current date and time.",79,[[[R[83]]],[[R[66],[R[95]]],[R[95]]]]],[11,"checked_sub_signed",E,"Subtracts given `Duration` from the current date and time.",79,[[[R[83]]],[[R[66],[R[95]]],[R[95]]]]],[11,"signed_duration_since",E,"Subtracts another `DateTime` from the current date and…",79,[[[R[95]]],[R[83]]]],[11,"naive_utc",E,"Returns a view to the naive UTC datetime.",79,[[["self"]],[R[99]]]],[11,"naive_local",E,"Returns a view to the naive local datetime.",79,[[["self"]],[R[99]]]],[11,"parse_from_rfc2822",E,"Parses an RFC 2822 date and time string such as `Tue, 1…",79,[[["str"]],[[R[97]],[R[1],[R[95],R[97]]],[R[95],[R[188]]]]]],[11,"parse_from_rfc3339",E,"Parses an RFC 3339 and ISO 8601 date and time string such…",79,[[["str"]],[[R[97]],[R[1],[R[95],R[97]]],[R[95],[R[188]]]]]],[11,"parse_from_str",E,R[223],79,[[["str"]],[[R[97]],[R[1],[R[95],R[97]]],[R[95],[R[188]]]]]],[11,"to_rfc2822",E,"Returns an RFC 2822 date and time string such as `Tue, 1…",79,[[["self"]],[R[84]]]],[11,"to_rfc3339",E,"Returns an RFC 3339 and ISO 8601 date and time string such…",79,[[["self"]],[R[84]]]],[11,"to_rfc3339_opts",E,"Return an RFC 3339 and ISO 8601 date and time string with…",79,[[["self"],["secondsformat"],["bool"]],[R[84]]]],[11,"format_with_items",E,R[224],79,[[["self"],["i"]],[R[225]]]],[11,"format",E,R[224],79,[[["str"],["self"]],[[R[226]],[R[225],[R[226]]]]]],[11,"to_auth",E,"Converts the dsn into an auth object.",80,[[["self"],[R[66],["str"]],["str"]],["auth"]]],[11,"store_api_url",E,"Returns the submission API URL.",80,[[["self"]],["url"]]],[11,"scheme",E,"Returns the scheme",80,[[["self"]],["scheme"]]],[11,R[227],E,"Returns the public_key",80,[[["self"]],["str"]]],[11,R[228],E,"Returns secret_key",80,[[["self"]],[[R[66],["str"]],["str"]]]],[11,"host",E,"Returns the host",80,[[["self"]],["str"]]],[11,"port",E,"Returns the port",80,[[["self"]],["u16"]]],[11,"project_id",E,"Returns the project_id",80,[[["self"]],[R[159]]]],[11,"default_port",E,"Returns the default port for this scheme.",48,[[["self"]],["u16"]]],[11,"today",E,"Returns a `Date` which corresponds to the current date.",82,[[],[["date",["utc"]],["utc"]]]],[11,"now",E,"Returns a `DateTime` which corresponds to the current date.",82,[[],[[R[95],["utc"]],["utc"]]]],[11,"to_hyphenated",E,"Creates a [`Hyphenated`] instance from a [`Uuid`].",83,[[],["hyphenated"]]],[11,"to_hyphenated_ref",E,"Creates a [`HyphenatedRef`] instance from a [`Uuid`]…",83,[[["self"]],["hyphenatedref"]]],[11,"to_simple",E,"Creates a [`Simple`] instance from a [`Uuid`].",83,[[],["simple"]]],[11,"to_simple_ref",E,"Creates a [`SimpleRef`] instance from a [`Uuid`] reference.",83,[[["self"]],["simpleref"]]],[11,"to_urn",E,"Creates a [`Urn`] instance from a [`Uuid`].",83,[[],["urn"]]],[11,"to_urn_ref",E,"Creates a [`UrnRef`] instance from a [`Uuid`] reference.",83,[[["self"]],["urnref"]]],[11,"new_v4",E,"Creates a random [`Uuid`].",83,[[],["uuid"]]],[18,"NAMESPACE_DNS",E,"[`Uuid`] namespace for Domain Name System (DNS).",83,N],[18,"NAMESPACE_OID",E,"[`Uuid`] namespace for ISO Object Identifiers (OIDs).",83,N],[18,"NAMESPACE_URL",E,"[`Uuid`] namespace for Uniform Resource Locators (URLs).",83,N],[18,"NAMESPACE_X500",E,"[`Uuid`] namespace for X.500 Distinguished Names (DNs).",83,N],[11,"nil",E,"The 'nil UUID'.",83,[[],["uuid"]]],[11,"from_fields",E,"Creates a `Uuid` from four field values in big-endian order.",83,[[["u16"],["u32"]],[[R[229]],[R[1],["uuid",R[229]]],["uuid"]]]],[11,"from_fields_le",E,"Creates a `Uuid` from four field values in little-endian…",83,[[["u16"],["u32"]],[[R[229]],[R[1],["uuid",R[229]]],["uuid"]]]],[11,"from_slice",E,R[230],83,[[],[[R[229]],[R[1],["uuid",R[229]]],["uuid"]]]],[11,"from_bytes",E,R[230],83,[[],["uuid"]]],[11,"from_random_bytes",E,"Creates a v4 Uuid from random bytes (e.g. bytes supplied…",83,[[],["uuid"]]],[11,"get_variant",E,"Returns the variant of the `Uuid` structure.",83,[[["self"]],[["variant"],[R[66],["variant"]]]]],[11,"get_version_num",E,"Returns the version number of the `Uuid`.",83,[[["self"]],["usize"]]],[11,"get_version",E,"Returns the version of the `Uuid`.",83,[[["self"]],[[R[66],[R[33]]],[R[33]]]]],[11,"as_fields",E,"Returns the four field values of the UUID in big-endian…",83,[[["self"]]]],[11,"to_fields_le",E,"Returns the four field values of the UUID in little-endian…",83,[[["self"]]]],[11,"as_bytes",E,"Returns an array of 16 octets containing the UUID data.…",83,[[["self"]]]],[11,"to_timestamp",E,"Returns an Optional Tuple of (u64, u16) representing the…",83,[[["self"]],[R[66]]]],[11,"parse_str",E,"Parses a `Uuid` from a string of hexadecimal digits with…",83,[[["str"]],[[R[97]],["uuid"],[R[1],["uuid",R[97]]]]]],[11,"is_nil",E,"Tests if the UUID is nil",83,[[["self"]],["bool"]]],[11,"encode_buffer",E,"A buffer that can be used for `encode_...` calls, that is…",83,[[]]]],"p":[[4,"Value"],[4,"Entry"],[3,R[6]],[3,"LogEntry"],[3,"Frame"],[3,R[231]],[3,R[232]],[4,"ThreadId"],[3,"Addr"],[3,"RegVal"],[3,"Thread"],[3,"CError"],[3,R[233]],[3,R[234]],[3,R[235]],[3,R[236]],[3,R[237]],[4,"Level"],[3,R[37]],[4,R[238]],[3,"User"],[3,"Request"],[3,R[239]],[4,R[240]],[3,R[241]],[3,R[242]],[3,R[243]],[3,R[244]],[3,R[245]],[3,R[246]],[4,"Context"],[4,R[247]],[3,R[248]],[3,R[249]],[3,R[250]],[3,R[251]],[3,R[252]],[3,"Event"],[3,R[253]],[3,"Hub"],[3,"Scope"],[8,R[254]],[8,R[255]],[3,R[256]],[3,"Logger"],[3,"Client"],[4,R[257]],[4,R[258]],[4,"Scheme"],[8,"TimeZone"],[4,R[259]],[4,R[260]],[8,R[261]],[8,"IntoDsn"],[8,R[262]],[8,R[263]],[3,"Map"],[3,R[3]],[3,"RangeMut"],[3,R[264]],[3,"Map"],[3,R[265]],[3,R[6]],[3,"Range"],[3,"IntoIter"],[3,"Keys"],[3,"IterMut"],[3,R[266]],[3,"Iter"],[3,R[267]],[3,"DebugId"],[3,R[88]],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[3,R[272]],[3,"Auth"],[3,R[273]],[3,"DateTime"],[3,"Dsn"],[3,R[274]],[3,"Utc"],[3,"Uuid"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);